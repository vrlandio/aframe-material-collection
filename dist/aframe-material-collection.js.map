{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/primitives/button.js","webpack:///./src/primitives/fab_button.js","webpack:///./src/primitives/fab_button_small.js","webpack:///./src/primitives/switch.js","webpack:///./src/primitives/slider.js","webpack:///./src/primitives/number.js","webpack:///./src/primitives/toast.js","webpack:///./src/primitives/checkbox.js","webpack:///./src/primitives/radio.js","webpack:///./src/primitives/input-text.js","webpack:///./src/primitives/scroll-pane.js","webpack:///./src/primitives/renderer.js","webpack:///./src/components/input-text.js","webpack:///./src/components/btn.js","webpack:///./src/components/slider.js","webpack:///./src/components/number.js","webpack:///./src/components/switch.js","webpack:///./src/components/toast.js","webpack:///./src/components/scroll-pane.js","webpack:///./src/components/checkbox.js","webpack:///./src/components/radio.js","webpack:///./src/components/curved-plane.js","webpack:///./src/components/renderer.js","webpack:///./src/primitives/text-input.js","webpack:///./src/primitives/number-input.js","webpack:///./src/primitives/int-input.js","webpack:///./src/primitives/password-input.js","webpack:///./src/components/text.js","webpack:///./src/components/icon.js","webpack:///./src/components/rounded.js","webpack:///./src/components/ripple.js","webpack:///./src/components/mouse-shim.js","webpack:///./src/components/double-click.js","webpack:///./src/components/border.js","webpack:///./src/components/color-picker.js","webpack:///./src/components/modal.js","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB,sBAAsB,oBAAoB;AAC1C,qBAAqB,MAAM,cAAc,iCAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AC/CD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB,qBAAqB,MAAM,YAAY,yCAAyC;AAChF,mBAAmB,MAAM;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AClCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB,qBAAqB,MAAM,gBAAgB,+BAA+B;AAC1E,mBAAmB,MAAM,gBAAgB;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACfD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC,G;;;;;;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sBAAsB,kCAAkC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACzCD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;;AAEA,SAAS;AACT;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACxBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AChCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AC7BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACtBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,mBAAmB,gCAAgC;AACnD,eAAe,gBAAgB;AAC/B,kBAAkB,gBAAgB;AAClC,eAAe,gBAAgB;AAC/B,eAAe,wBAAwB;AACvC,gBAAgB,0BAA0B;AAC1C,yBAAyB,gBAAgB;AACzC,+BAA+B,wBAAwB;AACvD,+BAA+B,wBAAwB;AACvD,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI,gBAAgB;AACvE,0BAA0B,kBAAkB;AAC5C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAA+B;;AAExC,SAAS,oCAAoC;;AAE7C,SAAS,oCAAoC;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,WAAW;AACjG;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mCAAmC;AACnC;AACA;AACA;AACA,aAAa;AACb,kCAAkC;AAClC;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC,kEAAkE,SAAS;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD,E;;;;;;AC/fA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC,qBAAqB,2BAA2B;AAChD,sBAAsB,6BAA6B;AACnD,kBAAkB;AAClB,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,E;;;;;;ACtFD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC,kBAAkB,8BAA8B;AAChD,uBAAuB,kBAAkB;AACzC,qBAAqB,kBAAkB;AACvC,6BAA6B,kBAAkB;AAC/C,mBAAmB,eAAe;AAClC,sBAAsB,4BAA4B;AAClD,6BAA6B,yBAAyB;AACtD,eAAe,2BAA2B;AAC1C,gBAAgB,2BAA2B;AAC3C,+BAA+B,wBAAwB;AACvD,sBAAsB,4BAA4B;AAClD,uBAAuB,wBAAwB;AAC/C,kBAAkB,gBAAgB;AAClC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,WAAW,cAAc;AACtF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mGAAmG,8BAA8B;AACjI;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;AC5JD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,oBAAoB,+BAA+B;AACnD,eAAe,6BAA6B;AAC5C,gBAAgB,4BAA4B;AAC5C,6BAA6B,yBAAyB;AACtD,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,cAAc,aAAa;AACxG,8DAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,cAAc,aAAa;AAC9G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,cAAc,aAAa;AAC9G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,iEAAiE,8DAA8D,sBAAsB,cAAc,aAAa;AAChL;AACA;AACA;AACA,G;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,8BAA8B;AAC9C,kBAAkB,8BAA8B;AAChD,uBAAuB,kBAAkB;AACzC,qBAAqB,kBAAkB;AACvC,6BAA6B,kBAAkB;AAC/C,mBAAmB,eAAe;AAClC,wBAAwB,wBAAwB;AAChD,sBAAsB,2BAA2B;AACjD,6BAA6B,yBAAyB;AACtD,eAAe,2BAA2B;AAC1C,gBAAgB,2BAA2B;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,WAAW,cAAc;AACtF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mGAAmG,8BAA8B;AACjI;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC,E;;;;;;AC7HD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kFAAkF;AAC/G;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD,MAAM;AAC7D;AACA,6BAA6B,SAAS;AACtC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,6BAA6B,SAAS;AACtC,qBAAqB,MAAM;AAC3B;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACjDD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,0BAA0B;AAC1C,eAAe,0BAA0B;AACzC,uBAAuB,2BAA2B;AAClD,uBAAuB,wBAAwB;AAC/C,2BAA2B,kBAAkB;AAC7C,4BAA4B,wBAAwB;AACpD,kBAAkB,gBAAgB;AAClC,+BAA+B,wBAAwB;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;ACjcD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,8BAA8B;AAC9C,wBAAwB,mBAAmB;AAC3C,0BAA0B,mBAAmB;AAC7C,wBAAwB,mBAAmB;AAC3C,wBAAwB,8BAA8B;AACtD,kBAAkB,8BAA8B;AAChD,6BAA6B,yBAAyB;AACtD,eAAe,4BAA4B;AAC3C,gBAAgB,4BAA4B;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,oDAAoD,wBAAwB;AAC5E,SAAS;AACT,oDAAoD,qBAAqB;AACzE,oDAAoD,sCAAsC;AAC1F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B,iBAAiB,MAAM;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;ACzKD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,eAAe,kCAAkC;AACjD,oBAAoB,qBAAqB;AACzC,qBAAqB,iCAAiC;AACtD,sBAAsB,qBAAqB;AAC3C,oBAAoB,qBAAqB;AACzC,eAAe,kCAAkC;AACjD,yBAAyB,2BAA2B;AACpD,YAAY,gCAAgC;AAC5C,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,WAAW,cAAc;AACzB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC,WAAW,OAAO;AAClB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,CAAC;;;;;;;AC/HD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;AC/BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC,yBAAyB,iBAAiB;AAC1C,+BAA+B,wBAAwB;AACvD,uBAAuB,qBAAqB,gBAAgB;AAC5D,mBAAmB,qBAAqB,SAAS;AACjD,0BAA0B,qBAAqB,eAAe;AAC9D,wBAAwB,8BAA8B;AACtD,aAAa,yBAAyB;AACtC,4BAA4B,wBAAwB;AACpD,eAAe,6BAA6B;AAC5C,mBAAmB,qBAAqB;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,kBAAkB;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iGAAiG,gBAAgB;AACjH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC,qBAAqB,UAAU;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA,oCAAoC,oDAAoD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA,kDAAkD,yCAAyC;AAC3F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;AC5OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACpBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,0BAA0B;AACzC,gBAAgB,0BAA0B;AAC1C,gBAAgB,YAAY;AAC5B,eAAe,gBAAgB;AAC/B,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,wBAAwB,mBAAmB;AAC3C,mBAAmB,gCAAgC;AACnD,qBAAqB,kBAAkB;AACvC,oBAAoB,mBAAmB;AACvC,sBAAsB,mBAAmB;AACzC,6BAA6B,yBAAyB;AACtD,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qCAAqC;AACnD,cAAc,qBAAqB,aAAa;AAChD,gBAAgB,4BAA4B;AAC5C,eAAe;AACf,KAAK;AACL;AACA,2HAA2H,uGAAuG;AAClO;AACA;AACA;AACA,CAAC,E;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,8BAA8B;AACrD,uBAAuB,wBAAwB;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,gBAAgB;AAChC,kBAAkB,wBAAwB;AAC1C,sBAAsB,uBAAuB;AAC7C,mBAAmB,uBAAuB;AAC1C,uBAAuB,6BAA6B;AACpD,cAAc,qBAAqB,SAAS;AAC5C,gBAAgB,6BAA6B;AAC7C,kBAAkB;AAClB,KAAK;AACL;AACA;AACA;AACA,8FAA8F,kEAAkE;AAChK;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,yBAAyB,MAAM;AAC/B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,E;;;;;;ACnGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uDAAuD,qDAAqD;AAC5G;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACnCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD,uBAAuB,wBAAwB;AAC/C,qBAAqB,+BAA+B;AACpD,eAAe,kBAAkB;AACjC,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oJAAoJ,yBAAyB;;AAE7K,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;ACnDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC,4BAA4B,kBAAkB;AAC9C,kBAAkB;AAClB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC,qBAAqB,KAAK;AAC1B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2DAA2D,qBAAqB,mBAAmB,kEAAkE,sDAAsD,SAAS;;AAEpO,sGAAsG,yBAAyB,gCAAgC,oGAAoG,gDAAgD,mDAAmD,SAAS,uBAAuB,0CAA0C,qDAAqD,gDAAgD,gFAAgF,0CAA0C,SAAS;;AAExpB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,oBAAoB,mBAAmB,gFAAgF,SAAS;;AAEzL,8DAA8D,4BAA4B,yBAAyB,sBAAsB,sCAAsC,sCAAsC,kEAAkE,+BAA+B,SAAS;;;AAG/T;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD;AAChD,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACpZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA,6BAA6B,OAAO;AACpC,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;;;;;;;;;;;;;;;;AC1ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,C;;ACtFA;AACA;AACA;AACA;AACA;AACc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"aframe-material-collection.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","/* global AFRAME */\n/**\n * Button Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-button\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerPrimitive('a-ui-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'plane',\n            width: 0.5,\n            height: 0.175\n        },\n        material: {\n            color: '#009688',\n            shader: 'flat',\n        },\n        \"ui-btn\":{},\n        \"ui-rounded\":{borderRadius:0.0025},\n        \"ui-ripple\":{size:{x:0.5,y:0.175},clampToSquare:true,zIndex:0.001},\n        text:{\n            font:'roboto',\n            align:'center',\n            zOffset:0.002,\n            wrapCount:10,\n            alphaTest:0.4\n        }\n    },\n    mappings: {\n        height: 'geometry.height',\n        width: 'geometry.width',\n        color: 'material.color',\n        transparent: 'material.transparent',\n        \"font-color\":'text.color',\n        \"ripple-color\":'ui-ripple.color',\n        \"ripple-size\":'ui-ripple.size',\n        \"ripple-z-index\":'ui-ripple.zIndex',\n        \"text-value\": 'text.value',\n        \"wrap-count\":'text.wrapCount',\n        \"border-radius\":\"ui-rounded.borderRadius\",\n        \"curve-segments\":\"ui-rounded.curveSegments\",\n        disabled:'ui-btn.disabled',\n        \"hover-height\":'ui-btn.hoverHeight',\n        \"active-height\":'ui-btn.activeHeight'\n    }\n}));","/* global AFRAME */\n/**\n * Floating Action Button Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-fab-button\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'circle',\n            radius: 0.1,\n            segments:6\n        },\n        material: {\n            color: '#009688',\n            shader: 'flat',\n        },\n        \"ui-btn\":{},\n        \"ui-ripple\":{size:{x:0.1,y:0.1},zIndex:0.002,fadeDelay:300,duration:500},\n        \"ui-icon\":{size:{x:0.105,y:0.105}}\n    },\n    mappings: {\n        radius: 'geometry.radius',\n        color: 'material.color',\n        \"icon-color\": 'ui-icon.color',\n        transparent: 'material.transparent',\n        src: 'ui-icon.src',\n        \"ripple-color\":'ui-ripple.color',\n        \"ripple-size\":'ui-ripple.size',\n        \"ripple-z-index\":'ui-ripple.zIndex',\n        disabled:'ui-btn.disabled'\n    }\n}));","/* global AFRAME */\n/**\n * Floating Action Button Small Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-fab-button-small\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button-small', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'circle',\n            radius: 0.075,\n            segments:6\n        },\n        material: {\n            color: '#009688',\n            shader: 'flat',\n        },\n        \"ui-btn\":{},\n        \"ui-ripple\":{size:{x:0.125,y:0.125},zIndex:-0.001,color:'#ff0000'},\n        \"ui-icon\":{size:{x:0.075,y:0.075}, src:'icons/sort_white_64dp.png'}\n    },\n    mappings: {\n        radius: 'geometry.radius',\n        color: 'material.color',\n        \"icon-color\": 'ui-icon.color',\n        transparent: 'material.transparent',\n        src: 'ui-icon.src',\n        \"ripple-color\":'ui-ripple.color',\n        \"ripple-size\":'ui-ripple.size',\n        \"ripple-z-index\":'ui-ripple.zIndex',\n        disabled:'ui-btn.disabled'\n    }\n}));","/* global AFRAME */\n/**\n * Switch Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-switch\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-switch', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-switch\":{}\n    },\n    mappings: {\n        value: 'ui-switch.value',\n        disabled: 'ui-switch.disabled',\n    }\n}));","/* global AFRAME */\n/**\n * Slider Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-slider\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-slider', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-slider\":{}\n    },\n    mappings: {\n        value: 'ui-slider.value',\n        disabled: 'ui-slider.disabled',\n        \"camera-el\": 'ui-slider.cameraEl'\n    }\n}));","/* global AFRAME */\n/**\n * Number Widget Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-number\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-number', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-number\":{}\n    },\n    mappings: {\n\n    }\n}));","/* global AFRAME */\n/**\n * Toast Message Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-toast\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerPrimitive('a-ui-toast', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        geometry: {\n            primitive: 'plane',\n            width: 0.5,\n            height: 0.2\n        },\n        material: {\n            color: '#010e0f',\n            shader: 'flat',\n            transparent:true,\n            opacity: 0.8\n        },\n        \"ui-rounded\":{borderRadius:0.01,curveSegments:3},\n        text:{\n            font:'roboto',\n            value:'Toast Message!',\n            align:'center',\n            zOffset:0.002,\n            wrapCount:20,\n        }\n    },\n    mappings: {\n        height: 'geometry.height',\n        width: 'geometry.width',\n        color: 'material.color',\n        transparent: 'material.transparent',\n        \"font-color\":'text.color',\n        \"text-value\": 'text.value',\n        \"wrap-count\":'text.wrapCount',\n        \"border-radius\":\"ui-rounded.borderRadius\",\n        \"curve-segments\":\"ui-rounded.curveSegments\"\n    }\n}));","/* global AFRAME */\n/**\n * Checkbox Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-checkbox\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerPrimitive('a-ui-checkbox', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-checkbox\":{\n\n        },\n        \"ui-ripple\":{\n            size:{x:0.1,y:0.1},\n            zIndex:-0.001,\n            color:'#afafaf'\n        }\n    },\n    mappings: {\n        value: 'ui-checkbox.value',\n        disabled: 'ui-checkbox.disabled',\n        indeterminate:'ui-checkbox.indeterminate'\n    }\n}));","/* global AFRAME */\n/**\n * Radio Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-radio\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-radio', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-radio\":{},\n        \"geometry\":{\n            primitive:'ring',\n            radiusInner:0.0575,\n            radiusOuter:0.0675,\n            segmentsTheta:6\n        },\n        \"material\":{\n            shader:'flat',\n            color:'#afafaf'\n        },\n        \"ui-ripple\":{\n            size:{x:0.1,y:0.1},\n            zIndex:-0.001,\n            color:'#afafaf'\n        }\n    },\n    mappings: {\n        color:'ui-radio.selectedColor',\n        value: 'ui-radio.value',\n        selected: 'ui-radio.selected',\n        disabled: 'ui-radio.disabled',\n    }\n}));","/* global AFRAME */\n/**\n * Text Input Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-input-text\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-input-text', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-input-text\":{\n            placeHolder:'Text...',\n            width:1,\n            height:0.2,\n            value:''\n        },\n        \"ui-double-click\":{}\n    },\n    mappings: {\n        width:\"ui-input-text.width\",\n        height:\"ui-input-text.height\",\n        type:\"ui-input-text.type\",\n        value:\"ui-input-text.value\",\n        \"background-color\":\"ui-input-text.backgroundColor\",\n        \"place-holder\":\"ui-input-text.placeHolder\",\n        \"camera-el\":\"ui-input-text.cameraEl\",\n        \"rig-el\":\"ui-input-text.rigEl\",\n        \"look-controls-component\":\"ui-input-text.lookControlsComponent\",\n        \"wasd-controls-component\":\"ui-input-text.wasdControlsComponent\",\n    }\n}));","/* global AFRAME */\n/**\n * Scroll Pane Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-scroll-pane\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-scroll-pane', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-scroll-pane\":{\n\n        }\n    },\n    mappings: {\n        width:\"ui-scroll-pane.width\",\n        height:\"ui-scroll-pane.height\",\n        \"scroll-z-offset\":\"ui-scroll-pane.scrollZOffset\",\n        \"handle-color\":\"ui-scroll-pane.scrollHandleColor\",\n        \"scroll-padding\":\"ui-scroll-pane.scrollPadding\",\n        \"look-controls-el\":\"ui-scroll-pane.cameraEl\",\n        \"look-controls-component\":\"ui-scroll-pane.lookControlsComponent\"\n    }\n}));","/* global AFRAME */\n/**\n * Renderer Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-renderer\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-renderer', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-renderer\":{}\n    },\n    mappings: {\n        \"ui-panel\":\"ui-renderer.uiPanel\",\n        \"look-controls-el\":\"ui-renderer.lookControlsEl\",\n        \"look-controls-component\":\"ui-renderer.lookControlsComponent\",\n        \"panel-position\":\"ui-renderer.panelPosition\",\n        \"panel-size\":\"ui-renderer.panelSize\",\n        \"render-resolution\":\"ui-renderer.renderResolution\",\n        \"debug-raycaster\":\"ui-renderer.debugRaycaster\",\n        \"fps\":\"ui-renderer.fps\",\n        \"intersectable-class\":\"ui-renderer.intersectableClass\",\n        \"render-debug\":\"ui-renderer.debug\"\n    }\n}));","/* global AFRAME,TWEEN,THREE */\n/**\n * Text input component Component for aframe-material-collection. Includes support for number/int only input.\n * @namespace aframe-material-collection\n * @component ui-text-input\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-input-text', {\n    depends:['text'],\n    schema: {\n        value: {default: ''},\n        disabled: {type: 'boolean', default: false},\n        type: {default: 'text'},\n        cameraEl:{type:'selector'},\n        rigEl:{type:'selector'},\n        width:{type:'number',default:1},\n        height:{type:'number',default:0.2},\n        backgroundColor:{default:'white'},\n        lookControlsComponent:{default:'look-controls'},\n        wasdControlsComponent:{default:'wasd-controls'},\n        placeHolder:{default:'Text...'}\n    },\n    init(){\n        this.setupElements();\n        this.setupScrollClips();\n        this.text.addEventListener('textfontset',()=>{\n            this.text.selectionStart = 0;\n            this.text.selectionLength = 0;\n            this.startSelection = 0;\n            this.scrollOffset = 0;\n            this.alphabet = {};\n            this.scrollIndex = 0;\n            let chars = this.data.value.split('');\n            this.chars = [];\n            this.charsAllowed = ['-','_','+','=','{','}','[',']',':',';','\\'','@','~','#','<','>',',','.','?','/','|','\\\\','`','¬'];\n            for(let i = 0; i < chars.length; i++){\n                this.chars.push({char:chars[i]});\n            }\n            this.blurHandler = ()=>this.blur();\n            this.isMoving = false;\n            let mousemove = this.onMousemove.bind(this);\n            this.keydown = e=>this.handleKeyboardEvent(e);\n            this.backing.addEventListener('mousedown',()=>{\n                this.focus();\n                this.playPauseCamera('pause');\n                this.backing.addEventListener('ui-mousemove',mousemove);\n            });\n            this.el.sceneEl.addEventListener('mouseup',()=>{\n                this.backing.removeEventListener('ui-mousemove',mousemove);\n                this.isMoving = false;\n                this.setSelection(this.text.selectionStart,this.text.selectionLength)\n            });\n            this.el.setAttribute('visible',false);\n            setTimeout(()=>{\n                this.setValue();\n                this.el.setAttribute('visible',true);\n                this.setScrollClips();\n            },150);\n        });\n        this.el.getValue = this.getValue.bind(this);\n        this.el.value = this.value.bind(this);\n        this.el.focus = this.focus.bind(this);\n    },\n    setupScrollClips(){\n        this.content_clips = [\n            new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), 0 ),\n            new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), 0 )\n        ];\n        //this.setScrollClips();\n    },\n    selectAll(){\n        this.text.selectionStart = 0;\n        this.text.selectionLength = this.chars.length;\n        this.setValue();\n    },\n    increaseWrap(){\n        let child = this.text.object3D.children[this.text.object3D.children.length-1];\n        if(!child)return;\n        if(child.geometry.layout._linesTotal>1){\n            this.text.setAttribute('width',this.text.getAttribute('width')*1.2);\n            this.text.setAttribute('wrap-pixels',this.text.getAttribute('width')*500);\n            this.text.setAttribute('x-offset',((this.text.getAttribute('width')-this.data.width)/2));\n            this.increaseWrap();\n        }\n    },\n    setScrollClips(){\n        //this.text.object3D.updateMatrixWorld();\n        //this.backing.object3D.parent.updateMatrixWorld();\n        this.content_clips[0].set(new THREE.Vector3( -1, 0, 0 ), (this.data.width/2)+0.005);\n        this.content_clips[1].set(new THREE.Vector3( 1, 0, 0 ), (this.data.width/2)+0.005);\n        this.content_clips[0].applyMatrix4(this.backing.object3D.matrixWorld);\n        this.content_clips[1].applyMatrix4(this.backing.object3D.matrixWorld);\n        setTimeout(()=>{\n            let child = this.text.object3D.children[this.text.object3D.children.length-1];\n            if(child)child.material.clippingPlanes = this.text._content_clips?this.text._content_clips.concat(this.content_clips):this.content_clips;\n        },0);\n        let selectionHeight = this.selectionHighlight.getObject3D('mesh');\n        if(selectionHeight){\n            selectionHeight.material.clippingPlanes = this.text._content_clips?this.text._content_clips.concat(this.content_clips):this.content_clips;\n        }\n        let carret = this.carret.getObject3D('mesh');\n        if(carret){\n            carret.material.clipShadows = true;\n            carret.material.needsUpdate = true;\n            carret.material.clippingPlanes = this.text._content_clips?this.text._content_clips.concat(this.content_clips):this.content_clips;\n        }\n    },\n    numberOnly(e,is_float){\n        // Stolen from stack overflow.\n        if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\n            // Allow: Ctrl/cmd+A\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n            // Allow: Ctrl/cmd+C\n            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n            // Allow: Ctrl/cmd+X\n            (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n            // Allow: home, end, left, right\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\n            // let it happen, don't do anything\n            return true;\n        }\n        // Regex to allow float/int input - float inpit allows \"0.\" for as you type numbers - need to remove on blur.\n        // TODO: Need to remove trailing dot on blur to make a valid number.\n        let output = this.getValue();\n        if(e){\n            return ((is_float?/^\\d*((\\.)|(\\.\\d+))?$/g:/^\\d*?$/g).test(output+e.key));\n        }\n\n    },\n    floatOnly(e){\n        return this.numberOnly(e,true);\n    },\n    focus(){\n        if(this.isFocused)return;\n        this.isFocused = true;\n        this.setupCarret();\n        this.setValue();\n        this.setScrollClips();\n        setTimeout(()=>this.el.sceneEl.addEventListener('mousedown',this.blurHandler),50);\n        window.addEventListener('keydown', this.keydown);\n        this.underline.setAttribute('height',0.008);\n        this.underline.setAttribute('color','#009688');\n    },\n    blur(){\n        this.isFocused = false;\n        clearInterval(this.carretInterval)\n        this.carret.getObject3D('mesh').material.opacity = 0;\n        this.el.sceneEl.removeEventListener('mousedown',this.blurHandler);\n        this.playPauseCamera('play');\n        window.removeEventListener('keydown', this.keydown);\n        UI.utils.stoppedChanging(this.text.object3D.uuid);\n        this.underline.setAttribute('height',0.005);\n        this.underline.setAttribute('color','#bfbfbf');\n        if(this.chars.length&&this.chars[this.chars.length-1].char==='.'&&this.data.type===\"number\"){\n            this.chars.pop();\n            this.setValue();\n        }\n    },\n    handleKeyboardEvent(e){\n        if(e.keyCode===88&&e.ctrlKey) { //CTRL + X\n            // let selection = window.getSelection();\n            // selection.removeAllRanges();\n            //\n            // let textNode = document.createTextNode('lol')\n            // document.body.appendChild(textNode)\n            //\n            // let range = document.createRange();\n            // range.setStart(textNode, 1);\n            // range.setEnd(textNode, 3);\n            //\n            // selection.addRange(range)\n            //\n            // document.execCommand('copy')\n            //\n            // document.body.removeChild(textNode)\n            // TODO: Clipboard API?? - https://stackoverflow.com/questions/6413036/get-current-clipboard-content\n\n\n            // const modifyCopy = e => {\n            //     console.log('copy executed!')\n            //     e.clipboardData.setData('text/plain', 'Please don\\'t copy our work!');\n            //     e.preventDefault();\n            // };\n            //\n            // document.addEventListener('copy', modifyCopy);\n        }if(e.keyCode===67&&e.ctrlKey) { //CTRL + C\n\n        }else if(e.keyCode===86&&e.ctrlKey) { //CTRL + V\n\n        }else if(e.keyCode===65&&e.ctrlKey) { //CTRL + A\n            this.text.selectionStart = 0;\n            this.text.selectionLength = this.chars.length;\n        }else if(e.code.indexOf('Key')>-1||e.code.indexOf('Digit')>-1||this.charsAllowed.indexOf(e.key)>-1){\n            let check = true;\n            switch(this.data.type){\n                case \"number\":\n                    check = this.floatOnly(e);\n                    break;\n                case \"int\":\n                    console.log(this.numberOnly(e));\n                    check = this.numberOnly(e);\n                    break;\n            }\n            if(check){\n                this.chars.splice(this.text.selectionStart,this.text.selectionLength,{char:e.key});\n                this.text.selectionStart++;\n                this.text.selectionLength = 0;\n            }\n        }else if(e.keyCode===46){// Delete\n            this.chars.splice(this.text.selectionStart,this.text.selectionLength||1);\n            this.text.selectionStart = this.text.selectionStart>this.chars.length?this.chars.length:this.text.selectionStart;\n            this.text.selectionLength = 0;\n        }else if(e.keyCode===39){\n            if(!e.shiftKey){\n                if(this.text.selectionLength){\n                    this.text.selectionStart+=this.text.selectionLength;\n                }else{\n                    this.text.selectionStart++;\n                }\n                this.text.selectionLength = 0;\n                if(this.text.selectionStart>this.chars.length)this.text.selectionStart = this.chars.length;\n                delete this.shiftStartPos\n            }else{\n                if(!this.shiftStartPos){\n                    this.shiftStartPos = this.text.selectionStart;\n                }\n                if(this.text.selectionStart<this.shiftStartPos){\n                    this.text.selectionStart++;\n                    this.text.selectionLength=Math.abs(this.shiftStartPos-this.text.selectionStart);\n                }else{\n                    this.text.selectionLength++;\n                }\n\n            }\n        }else if(e.keyCode===37){\n            if(!e.shiftKey) {\n                if (!this.text.selectionLength) {\n                    this.text.selectionStart--;\n                }\n                this.text.selectionLength = 0;\n                if (this.text.selectionStart < 0) this.text.selectionStart = 0;\n                delete this.shiftStartPos\n            }else{\n                if(!this.shiftStartPos){\n                    this.shiftStartPos = this.text.selectionStart;\n                }\n                if(this.text.selectionStart+this.text.selectionLength>this.shiftStartPos){\n                    this.text.selectionLength--;\n                }else{\n                    this.text.selectionStart--;\n                    this.text.selectionLength=Math.abs(this.shiftStartPos-this.text.selectionStart);\n                }\n            }\n        }else{\n            if(this.text.selectionLength) {\n                if(e.keyCode===8) {// Backspace\n                    this.chars.splice(this.text.selectionStart, this.text.selectionLength  );\n                    this.text.selectionLength = 0;\n                }\n            }else{\n                if(e.keyCode===8){// Backspace\n                    if(this.text.selectionStart){\n                        this.chars.splice(this.text.selectionStart-1,this.text.selectionLength||1 );\n                        this.text.selectionStart = this.text.selectionStart-1;\n                    }\n                }else if(e.keyCode===32){ // Space\n                    this.chars.splice(this.text.selectionStart,0,{char:' '});\n                    this.text.selectionStart++;\n                }\n            }\n\n        }\n        this.el.emit('ui-keypress',e);\n        this.setValue();\n        this.carret.getObject3D('mesh').material.opacity = 1;\n        e.preventDefault();\n        e.stopPropagation();\n    },\n    setValue(){\n        this.setScrolledValue();\n        this.setCharacters();\n        this.setSelection(this.text.selectionStart,this.text.selectionLength);\n        this.increaseWrap();\n    },\n    setScrolledValue(){\n        let output = this.getValue();\n        this.text.setAttribute('value',output);\n        if(!this.chars.length){\n            this.text.setAttribute('color','#bfbfbf');\n            this.text.setAttribute('value',this.data.placeHolder);\n        }else{\n            this.text.setAttribute('value',output);\n            this.text.setAttribute('color','#2f2f2f');\n        }\n    },\n    onMousemove(e){\n        let currentSelection = this.getSelectionPosition(e);\n        if(!this.isMoving){\n            this.isMoving = true;\n            this.startSelection = currentSelection;\n        }\n        let selection = this.getNearestGlyph(this.startSelection,currentSelection);\n        this.selectionHighlight.setAttribute('scale',(selection.end-selection.start)+' 1 1');\n        this.selectionHighlight.setAttribute('position',(selection.start+((selection.end-selection.start)/2))+' 0 0.001');\n        this.carret.setAttribute('position',selection.end+' 0 0.001');\n\n    },\n    setupElements(){\n\n\n        this.container = document.createElement('a-entity');\n        this.container.setAttribute('position',(this.data.width/2)+' 0 0');\n\n        this.text = document.createElement('a-text');\n        this.text.setAttribute('color','#2f2f2f');\n        this.text.setAttribute('anchor','center');\n        this.text.setAttribute('align','left');\n        this.text.setAttribute('width',this.data.width);\n        this.text.setAttribute('wrap-pixels',this.data.width*500);\n        this.text.className = 'no-yoga-layout';\n        this.text.setAttribute('height',this.data.height);\n        this.text.setAttribute('value',this.data.value);\n        this.container.appendChild(this.text);\n\n        this.selectionHighlight = document.createElement('a-plane');\n        this.selectionHighlight.setAttribute('width',1);\n        this.selectionHighlight.setAttribute('scale','0 1 1');\n        this.selectionHighlight.setAttribute('height',0.16);\n        this.selectionHighlight.setAttribute('transparent',true);\n        this.selectionHighlight.className = 'no-yoga-layout';\n        this.selectionHighlight.setAttribute('color','#009688');\n        this.selectionHighlight.setAttribute('shader','flat');\n        this.selectionHighlight.setAttribute('opacity',0.3);\n        this.selectionHighlight.setAttribute('position','0 0 0.001');\n        this.text.appendChild(this.selectionHighlight);\n\n        this.carret = document.createElement('a-plane');\n        this.carret.setAttribute('width',0.01);\n        this.carret.setAttribute('height',0.12);\n        this.carret.setAttribute('transparent',true);\n        this.carret.setAttribute('opacity',0);\n        this.carret.setAttribute('shader','flat');\n        this.carret.className = 'no-yoga-layout';\n        this.carret.setAttribute('color','#009688');\n        this.carret.setAttribute('position',-(this.data.width/2)+' 0 0.001');\n        this.text.appendChild(this.carret);\n\n\n        this.backing = document.createElement('a-plane');\n        this.backing.className = 'intersectable no-yoga-layout';\n        this.backing.setAttribute('width',this.data.width+0.1);\n        this.backing.setAttribute('height',this.data.height);\n        this.backing.setAttribute('color',this.data.backgroundColor);\n        this.backing.setAttribute('shader','flat');\n        this.container.appendChild(this.backing);\n\n\n\n        this.underline = document.createElement('a-plane');\n        this.underline.setAttribute('width',this.data.width);\n        this.underline.setAttribute('height',0.005);\n        this.underline.className = 'no-yoga-layout';\n        this.underline.setAttribute('shader','flat');\n        this.underline.setAttribute('color','#bfbfbf');\n        this.underline.setAttribute('position','0 -0.072 0.001');\n        this.container.appendChild(this.underline);\n\n        this.el.appendChild(this.container);\n\n\n    },\n    setupCarret(){\n        let material = this.carret.getObject3D('mesh').material;\n        this.carretInterval = setInterval(()=>{\n            material.opacity = material.opacity?0:1;\n            UI.utils.isChanging(this.el.sceneEl,this.text.object3D.uuid);\n        },350);\n    },\n    value(text){\n        if(text||text===\"\"){\n            this.chars = text.split('').map(char=>({char:char}))\n            this.setValue();\n            // set value\n        }else{\n            return this.chars.map(c=>c.char).join('');\n        }\n    },\n    getValue(){\n        let output = '';\n        for(let i = 0; i < this.chars.length; i++){\n            output+=this.data.type===\"password\"?'*':this.chars[i].char;\n        }\n        return output;\n    },\n    getSelectionPosition(e){\n        this.el.object3D.updateMatrixWorld();\n        return this.text.object3D.worldToLocal(e.detail.intersection.point.clone()).x\n    },\n    playPauseCamera(method){\n        let el = this.data.cameraEl;\n        if (el&&el.components[this.data.lookControlsComponent]) {\n            el.components[this.data.lookControlsComponent][method]();\n        }\n\n        if(this.data.rigEl){\n            el = this.data.rigEl\n        }\n\n        if(el&&el.components[this.data.wasdControlsComponent]) {\n            el.components[this.data.wasdControlsComponent][method]();\n        }\n    },\n    setCharacters(){\n        this.positions = [];\n        let child = this.text.object3D.children[this.text.object3D.children.length-1];\n        if(!this.chars.length||!child)return;\n        let glyphs = child.geometry.layout.glyphs;\n        let scale = child.scale.x;\n        let lastPosition = 0;\n        for(let i = 0; i < glyphs.length; i++){\n            let glyph = glyphs[i];\n            let currentWidth = (this.chars[i].char===' '?20:glyph.data.width);\n            let current = (((glyph.position[0]+currentWidth+glyph.position[1])*scale)+0.08);\n            if(i===0){\n                lastPosition = (((glyph.position[0]+glyph.position[1])*scale)+0.08)\n            }\n            if(!this.chars[i].id){\n                this.chars[i].id=glyph.data.id;\n                this.chars[i].width = current-lastPosition;\n            }\n            this.chars[i].left = lastPosition;\n            lastPosition = current;\n        }\n    },\n    getNearestGlyph(startPosition,endPosition){\n        let width = Number(this.text.getAttribute('width'));\n        let parentWidth = this.data.width;\n        if(endPosition<startPosition){\n            let tempPosition = endPosition;\n            endPosition = startPosition;\n            startPosition = tempPosition;\n        }\n        if(startPosition<-parentWidth/2){\n            startPosition = -parentWidth/2;\n        }\n        if(endPosition>width-parentWidth/2){\n            endPosition = width-parentWidth/2;\n        }\n        let startDiff = Number.POSITIVE_INFINITY;\n        let endDiff = Number.POSITIVE_INFINITY;\n        let output = {start:0,end:0};\n        if(this.chars.length){\n            for(let i = 0; i <= this.chars.length; i++){\n                let position = this.chars[i===this.chars.length?i-1:i];\n                let currentPosition = (i===this.chars.length?position.left+position.width:position.left)-(parentWidth)/2;\n                if(Math.abs(startPosition-currentPosition)<startDiff){\n                    startDiff = Math.abs(startPosition-currentPosition);\n                    output.start = currentPosition;\n                    this.text.selectionStart = i;\n                }\n                if(Math.abs(endPosition-currentPosition)<endDiff){\n                    endDiff = Math.abs(endPosition-currentPosition);\n                    output.end = currentPosition;\n                    this.text.selectionLength = i-this.text.selectionStart;\n                }\n            }\n        }\n        return output;\n    },\n    setSelection(start,length){\n        this.text.selectionStart = start;\n        this.text.selectionLength = length;\n        let right = 0,left = 0;\n        for(let i = 0; i < this.chars.length; i++){\n            let position = this.chars[i];\n            if(i>=start&&i<start+length+1){\n                let current = position.left;\n                if(i===start){\n                    left = current\n                }\n                right = current;\n            }\n        }\n        let end = this.chars.length?this.chars[this.chars.length-1].left+this.chars[this.chars.length-1].width:0;\n        if(start+length===this.chars.length){\n            right = end\n        }\n        if(start===this.chars.length){\n            left = right = end\n        }\n        let parentWidth = this.data.width;\n        this.selectionHighlight.setAttribute('scale',(right-left)+' 1 1');\n        this.selectionHighlight.setAttribute('position',(left+((right-left)/2)-((parentWidth)/2))+' 0 0.001')\n        let carretPosition = (right-((parentWidth)/2));\n        this.carret.setAttribute('position',carretPosition+' 0 0.001');\n\n        if(carretPosition>(parentWidth/2)-this.scrollOffset){\n            this.scrollOffset = -(carretPosition-(parentWidth/2));\n            this.text.setAttribute('position',this.scrollOffset+' 0 0');\n        }\n\n        if((carretPosition+parentWidth/2)<-this.scrollOffset){\n            this.scrollOffset+=(-this.scrollOffset-(carretPosition+parentWidth/2));\n            if(this.scrollOffset>0)this.scrollOffset=0;\n            this.text.setAttribute('position',this.scrollOffset+' 0 0');\n        }\n    },\n    updateSchema() {\n    }\n});\n//","/* global AFRAME,TWEEN */\n/**\n * Button base Component for aframe-material-collection. This is used as the base component for all the button primitives.\n * @namespace aframe-material-collection\n * @component ui-btn\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-btn', {\n    schema:{\n        duration:{type:'int',default:250},\n        hoverHeight:{type:'number',default:0.01},\n        activeHeight:{type:'number',default:-0.001},\n        disabled:{type:'boolean',default:false}\n    },\n    updateSchema(){\n      // TODO: handle updates to the button state, disabled flag here.\n    },\n    init() {\n        // Store the current button z value for animating mouse events\n        this.defaultZ = this.el.object3D.position.z;\n        // register input events for interaction\n        if(!this.data.disabled){\n            this.el.addEventListener('mouseenter', e=>this.mouseEnter(e));\n            this.el.addEventListener('mousedown', e=>this.mouseDown(e));\n            this.el.addEventListener('mouseup', e=>this.mouseUp(e));\n            this.el.addEventListener('mouseleave', e=>this.mouseLeave(e));\n        }\n    },\n    mouseEnter(e){\n        const _this = this;\n        // Lift the button up for hover animation\n        this.tween(this.defaultZ,this.defaultZ+this.data.hoverHeight,function(){\n            _this.el.object3D.position.z = this.x;\n        },function(){\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.hoverHeight;\n        });\n        //UI.utils.preventDefault(e)\n    },\n    mouseLeave(e){\n        // Ignore mouse leave event if the button was clicked - mouse up already resets to default state.\n        if(this.is_clicked){\n            return this.is_clicked = false;\n        }\n        // Reset button state from hover\n        this.resetAnimation(this.defaultZ+this.data.hoverHeight);\n        //UI.utils.preventDefault(e)\n    },\n    mouseUp(e){\n        this.is_clicked = true;\n        // Reset button state from pressed\n        this.resetAnimation(this.defaultZ+this.data.activeHeight);\n        UI.utils.preventDefault(e)\n    },\n    mouseDown(e){\n        const _this = this;\n        // Press state animation from hovered\n        this.tween(this.defaultZ+this.data.hoverHeight,this.defaultZ+this.data.activeHeight,function(){\n            _this.el.object3D.position.z = this.x;\n        },function(){\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.activeHeight;\n        });\n        UI.utils.preventDefault(e)\n    },\n    resetAnimation(start_z){\n        let _this = this;\n        this.tween(start_z,this.defaultZ,function(){\n            _this.el.object3D.position.z = this.x;\n        },function(){\n            _this.el.object3D.position.z = _this.defaultZ;\n        })\n    },\n    tween(from,to,callback,complete){\n        let _this = this;\n        // Start changes\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n        return new TWEEN.Tween({x:from})\n            .to({ x: to}, this.data.duration)\n            .onUpdate(callback)\n            .onComplete(function(){\n                // Stop changes\n                UI.utils.stoppedChanging(_this.el.object3D.uuid)\n                return complete.call(this);\n            })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n});","/* global AFRAME,TWEEN,THREE */\n/**\n * Slider Component for aframe-material-collection. Includes a disabled state.\n * @namespace aframe-material-collection\n * @component ui-slider\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-slider', {\n    schema: {\n        value: {type:'number',default: 0},\n        disabled:{type:'boolean',default: false},\n        progressColor:{default:'#4db6ac'},\n        handleColor:{default:'#009688'},\n        handleDisabledColor:{default:'#afafaf'},\n        railColor:{default:'#fff'},\n        handleZIndex:{type:'number',default:0.001},\n        intersectableClass: {default: 'intersectable'},\n        width:{type:'number',default: 0.5},\n        height:{type:'number',default: 0.1},\n        lookControlsComponent:{default:'look-controls'},\n        handleRadius:{type:'number',default:0.055},\n        scrollZOffset:{type:'number',default:0},\n        cameraEl:{type:'selector'},\n    },\n    getValue(){\n        return this.scroll_perc;\n    },\n    init(){\n        this.scroll_perc = this.data.value;\n        this.width = this.data.width;\n        this.height = this.data.height;\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\n        this.backgroundPanel = document.createElement('a-plane');\n        this.backgroundPanel.setAttribute('class','no-yoga-layout background '+this.data.intersectableClass);\n        this.backgroundPanel.setAttribute('width',this.data.width+0.01);\n        this.backgroundPanel.setAttribute('height',this.data.height+0.01);\n        this.backgroundPanel.setAttribute('position','0 0 -0.02');\n        this.backgroundPanel.setAttribute('opacity',0.0001);//\n        this.backgroundPanel.setAttribute('transparent',false);\n        this.backgroundPanel.setAttribute('visible',false);\n        this.el.appendChild(this.backgroundPanel);\n        // Setup handle circle entity.\n        this.handleEl = document.createElement('a-circle');\n        this.handleEl.setAttribute('radius',this.data.handleRadius);\n        this.handleEl.setAttribute('color',this.data.handleColor);\n        this.handleEl.setAttribute('shader','flat');\n        this.handleEl.setAttribute('ui-ripple','size:0.1 0.1;color:#999;fadeDelay:300;duration:500');\n        this.handleEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\n        this.handleEl.setAttribute('position',((-(this.data.width)/2)+this.data.handleRadius)+' 0 '+this.data.handleZIndex);\n        this.handleEl.setAttribute('segments',6);\n        this.el.appendChild(this.handleEl);\n\n        // Setup rail entity.\n        this.railEl = document.createElement('a-plane');\n        this.railEl.setAttribute('width',(this.data.width-0.1));\n        this.railEl.setAttribute('height','0.05');\n        this.railEl.setAttribute('shader','flat');\n        this.railEl.setAttribute('ui-rounded','borderRadius:0.025');\n        this.railEl.setAttribute('color',this.data.railColor);\n        this.railEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\n        this.el.appendChild(this.railEl);\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\n        // selected progress bar part of the rail\n        this.railEl.addEventListener('rounded-loaded',()=>{\n            this.getRailObject(this.railEl.object3D);\n            this.slide(this.scroll_perc,true);\n        });\n        // Pause/play camera look controls\n        const playPauseCamera = method=>{\n            if(this.data.cameraEl) {\n                let lookControls = this.data.cameraEl.components[this.data.lookControlsComponent];\n                if(lookControls){\n                    lookControls[method]();\n                }\n            }\n        };\n        // Setup mouse move handler for scrolling and updating scroll handle.\n        const mousemove = e=>this.mouseMove(e);\n        // Start scroll\n        this.handleEl.addEventListener('mousedown',e=>{\n            // Pause look controls to allow scrolling\n            playPauseCamera('pause');\n            this.isDragging = true;\n            // Store the start point offset\n            this.el.emit('slide-start',this.scroll_perc);\n            this.handlePos = this.handleEl.object3D.worldToLocal(e.detail.intersection?e.detail.intersection.point:e.relatedTarget.object3D.position).x;\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\n            // Start changes\n            UI.utils.isChanging(this.el.sceneEl,this.handleEl.object3D.uuid);\n            // Prevent default behaviour of event\n            UI.utils.preventDefault(e);\n        });\n        // End scroll\n        const endScroll = e=>{\n            if(this.isDragging){\n                this.backgroundPanel.removeEventListener('ui-mousemove',mousemove);\n                // Play look controls once scrolling is finished\n                playPauseCamera('play');\n                this.isDragging = false;\n                // Stop changes\n                this.el.emit('slide-end',this.scroll_perc);\n                UI.utils.stoppedChanging(this.handleEl.object3D.uuid);\n                // Prevent default behaviour of event\n                UI.utils.preventDefault(e);\n            }\n        };\n        this.backgroundPanel.addEventListener('mouseup',endScroll);\n        this.backgroundPanel.addEventListener('mouseleave',endScroll);\n        // // Handle clicks on rail to scroll\n        this.railEl.addEventListener('mousedown',e=>{\n\n            UI.utils.isChanging(this.el.sceneEl,this.handleEl.object3D.uuid);\n            // Pause look controls\n            this.isDragging = true;\n            // Reset handle pos to center of handle\n            this.handlePos = 0;\n            // Scroll immediately and register mouse move events.\n            this.slide(this.railEl.object3D.worldToLocal(e.detail.intersection?e.detail.intersection.point:e.relatedTarget.object3D.position).x);\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\n            this.el.emit('slide-end',this.scroll_perc);\n            // Prevent default behaviour of event\n            UI.utils.preventDefault(e);\n        });\n        this.el.slide = this.slide.bind(this);\n        this.el.getValue = this.getValue.bind(this);\n        this.el.railEl = this.railEl;\n    },\n    slide(positionX,isPerc){\n        let min = (-(this.data.width)/2)+this.data.handleRadius;\n        let max = ((this.data.width)/2)-this.data.handleRadius;\n        // Set scroll position with start point offset.\n        let scroll_pos = isPerc?(min+((max-min)*positionX)):THREE.Math.clamp(positionX,min,max);\n        this.scroll_perc = isPerc?positionX:((scroll_pos-min)/(max-min));\n        this.el.emit('slide',this.scroll_perc);\n        this.progress.scale.set(this.scroll_perc||0.0001,1,1);\n        this.progress.position.set((-(this.data.width-this.data.handleRadius)/2)+(this.scroll_perc*((this.data.width-this.data.handleRadius)/2)),0,0.0001);\n        this.handleEl.setAttribute('position',/*((this.data.width/2)+this.data.scrollPadding)+' '+*/scroll_pos+' 0 '+(this.data.scrollZOffset+0.0005));\n    },\n    mouseMove(e){\n        if(this.isDragging){\n            let pos = this.railEl.object3D.worldToLocal(e.detail.intersection.point);\n            this.slide(pos.x-this.handlePos+this.data.handleRadius);\n        }\n    },\n    getRailObject(object){\n        // Get the rounded shape geomtery.\n        object.traverse(child=>{\n            if(child.geometry&&child.geometry.type===\"ShapeBufferGeometry\"){\n                this.progress = new THREE.Mesh(child.geometry.clone(),new THREE.MeshBasicMaterial({color:this.data.progressColor}));\n                this.progress.position.set(-this.data.width/2,0,0.0001);\n                this.progress.scale.set(0.00001,1,1);\n                this.el.object3D.add(this.progress);\n            }\n        });\n    },\n});\n","/* global AFRAME,TWEEN,THREE */\n/**\n * NUmber widget Component for aframe-material-collection. Includes up/down buttons\n * @namespace aframe-material-collection\n * @component ui-number\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-number', {\n    schema: {\n        value: {type: 'number', default: 0},\n        increment: {type: 'number', default: 0.001},\n        width:{type: 'number',default: 0.65},\n        height:{type: 'number',default: 0.2},\n        intersectableClass: {default: 'intersectable'},\n    },\n    init(){\n        this.setupElements();\n    },\n    setupElements(){\n        let numberText = document.createElement('a-plane');\n        numberText.setAttribute('width',\"0.55\");\n        numberText.setAttribute('height',\"0.2\");\n        numberText.className = 'no-yoga-layout';\n        numberText.setAttribute('color',\"#212121\");\n        numberText.setAttribute('text',\"value:\"+this.data.value.toFixed(3)+\";color:#212121;wrapCount:12;align:center\");\n        numberText.setAttribute('ui-border',\"borderRadius:0.1;borderWidth:0.008\");\n\n        let upButton = document.createElement('a-ui-fab-button-small');\n        upButton.setAttribute('scale','0.75 0.75 0.75');\n        upButton.className = 'no-yoga-layout '+this.data.intersectableClass;\n        upButton.setAttribute('color','#009688');\n        upButton.setAttribute('position','0.33 0.055 0.001');\n        upButton.setAttribute('color','#009688');\n        upButton.setAttribute('icon-color','#fff');\n        upButton.setAttribute('ripple-color','#009688');\n        upButton.setAttribute('src','https://cdn.theexpanse.app/images/icons/baseline_keyboard_arrow_up_white_18dp.png');\n        upButton.addEventListener('click',()=>{\n            this.data.value+=this.data.increment;\n            numberText.setAttribute('text',\"value:\"+(this.data.value).toFixed(3)+\";color:#212121;wrapCount:12;align:center\");\n            this.el.emit('change',this.data.value);\n        });\n        let downButton = document.createElement('a-ui-fab-button-small');\n        downButton.setAttribute('scale','0.75 0.75 0.75');\n        downButton.className = 'no-yoga-layout '+this.data.intersectableClass;\n        downButton.setAttribute('color','#009688');\n        downButton.setAttribute('position','0.33 -0.055 0.001');\n        downButton.setAttribute('color','#009688');\n        downButton.setAttribute('icon-color','#fff');\n        downButton.setAttribute('ripple-color','#009688');\n        downButton.setAttribute('src','https://cdn.theexpanse.app/images/icons/down_arrow.png');\n        downButton.addEventListener('click',()=>{\n            this.data.value-=this.data.increment;\n            numberText.setAttribute('text',\"value:\"+(this.data.value).toFixed(3)+\";color:#212121;wrapCount:12;align:center\");\n            this.el.emit('change',this.data.value);\n        });\n        numberText.appendChild(upButton);\n        numberText.appendChild(downButton);\n        this.el.appendChild(numberText);\n    }\n});\n\n/*\n<a-plane class=\"zInput\" width=\"0.55\" ui-border=\"borderRadius:0.1;borderWidth:0.008\" height=\"0.2\" color=\"#212121\" text=\"value:{{to-fixed vector.z 3}};color:#212121;wrapCount:12;align:center\">\n        <a-ui-fab-button-small scale=\"0.75 0.75 0.75\" class=\"zInputUp intersectable no-yoga-layout\" color=\"#009688\" position=\"0.33 0.055 0.001\" icon-color=\"#fff\" ripple-color=\"#009688\" src=\"https://cdn.theexpanse.app/images/icons/baseline_keyboard_arrow_up_white_18dp.png\"></a-ui-fab-button-small>\n        <a-ui-fab-button-small scale=\"0.75 0.75 0.75\" class=\"zInputDown intersectable no-yoga-layout\" color=\"#009688\" position=\"0.33 -0.055 0.001\" icon-color=\"#fff\" ripple-color=\"#009688\" src=\"https://cdn.theexpanse.app/images/icons/down_arrow.png\"></a-ui-fab-button-small>\n    </a-plane>\n */","/* global AFRAME,TWEEN,THREE */\n/**\n * Switch Component for aframe-material-collection. Includes a disabled state.\n * @namespace aframe-material-collection\n * @component ui-switch\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-switch', {\n    schema: {\n        value: {type:'boolean',default: false},\n        disabled:{type:'boolean',default: false},\n        progressColor:{default:'#4db6ac'},\n        handleColor:{default:'#009688'},\n        handleDisabledColor:{default:'#afafaf'},\n        railColor:{default:'#fff'},\n        switchDuration:{type:'int',default: 350},\n        handleZIndex:{type:'number',default:0.01},\n        intersectableClass: {default: 'intersectable'},\n        width:{type:'number',default: 0.3},\n        height:{type:'number',default: 0.1},\n    },\n    updateSchema(){\n        if(this.data){\n            if(this.data.disabled){\n                if(this.data.value){\n                    this.data.value=false;\n                    this.click();\n                }\n            }else{\n                this.click();\n            }\n            this.setDisabled();\n        }\n    },\n    init() {\n        this.width = 0.3;\n        this.height = 0.1;\n        // Setup handle circle entity.\n        this.handleEl = document.createElement('a-circle');\n        this.handleEl.setAttribute('radius',0.055);\n        this.handleEl.setAttribute('color',this.data.handleColor);\n        this.handleEl.setAttribute('shader','flat');\n        this.handleEl.setAttribute('ui-ripple','size:0.1 0.1;color:#999;fadeDelay:300;duration:500');\n        this.handleEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\n        this.handleEl.setAttribute('position','-0.05 0 '+this.data.handleZIndex);\n        this.handleEl.setAttribute('segments',6);\n        this.el.appendChild(this.handleEl);\n\n        // Setup rail entity.\n        this.railEl = document.createElement('a-plane');\n        this.railEl.setAttribute('width','0.15');\n        this.railEl.setAttribute('height','0.05');\n        this.railEl.setAttribute('shader','flat');\n        this.railEl.setAttribute('ui-rounded','borderRadius:0.025');\n        this.railEl.setAttribute('color',this.data.railColor);\n        this.railEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\n        this.el.appendChild(this.railEl);\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\n        // selected progress bar part of the rail\n        this.railEl.addEventListener('rounded-loaded',()=>{\n            this.getRailObject(this.railEl.object3D);\n            this.setDisabled();\n            this.click();\n        });\n        this.clickHandler = e=>{\n            this.data.value = !this.data.value;\n            this.click();\n            // Prevent default behaviour of event\n            if(e.detail.preventDefault){\n                e.detail.preventDefault();\n            }\n        };\n    },\n    setDisabled(){\n        // Add / Remove click handlers based on disabled state.\n        if(this.data.disabled){\n            this.handleEl.removeEventListener('mousedown',this.clickHandler);\n            this.handleEl.setAttribute('color',this.data.handleDisabledColor);\n        }else{\n            this.handleEl.addEventListener('mousedown',this.clickHandler);\n            this.handleEl.setAttribute('color',this.data.handleColor);\n        }\n    },\n    click(){\n        // Emit the current selected value\n        this.el.emit('ui-switch-changed',this.data.value);\n        // Animate the switch handle and the progress bar.\n        this.tweenHandle();\n        this.tweenProgress();\n    },\n    getRailObject(object){\n        // Get the rounded shape geomtery.\n        object.traverse(child=>{\n            if(child.geometry&&child.geometry.type===\"ShapeBufferGeometry\"){\n                this.progress = new THREE.Mesh(child.geometry.clone(),new THREE.MeshBasicMaterial({color:this.data.progressColor}));\n                this.progress.position.set(-0.075,0,0.001);\n                this.progress.scale.set(0.00001,1,1);\n                this.el.object3D.add(this.progress);\n            }\n        });\n    },\n    tweenProgress(){\n        if(this.progress){\n            new TWEEN.Tween(this.progress.position)\n                .to(new THREE.Vector3(this.data.value?0:-0.075,0,0.001), this.data.switchDuration)\n                .easing(TWEEN.Easing.Exponential.Out).start();\n            new TWEEN.Tween(this.progress.scale)\n                .to(new THREE.Vector3(this.data.value?1:0.00001,1,1), this.data.switchDuration)\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        }\n    },\n    tweenHandle(){\n        if(this.handleEl){\n            // Start changes\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n            new TWEEN.Tween(this.handleEl.object3D.position)\n                .to(new THREE.Vector3(this.data.value?0.05:-0.05,0,this.data.handleZIndex), this.data.switchDuration)\n                .onComplete(()=>{\n                    // Stop changes\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\n                })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        }\n    }\n});","/* global AFRAME,TWEEN,THREE */\n/**\n * Toast Component for aframe-material-collection.\n * @namespace aframe-material-collection\n * @component ui-toast\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-toast', {\n    schema: {\n        toastEl:{type:'selector'},\n        message:{default:'Hello from toast!'}\n    },\n    init() {\n        this.originalPosition = this.data.toastEl.getAttribute('position').clone();\n        this.el.addEventListener('mousedown',()=>{\n            if(this.closeTween)this.closeTween.stop();\n            UI.utils.isChanging(this.el.sceneEl,this.data.toastEl.object3D.uuid);\n            this.data.toastEl.setAttribute('visible',true);\n            this.data.toastEl.setAttribute('text-value',UI.utils.shorten(this.data.message,85));\n            let _this = this;\n            new TWEEN.Tween({x:this.originalPosition.x,y:this.originalPosition.y-0.1,z:this.originalPosition.z})\n                .to(this.originalPosition, 350)\n                .onUpdate(function(){\n                    _this.data.toastEl.setAttribute('position',this);\n                })\n                .onComplete(()=>{\n                    // Stop changes\n                    this.closeTween = new TWEEN.Tween({x:0.8})\n                        .delay(2000)\n                        .to({x:0.0001}, 350)\n                        .onUpdate(function(){\n                            _this.data.toastEl.setAttribute('opacity',this.x);\n                        })\n                        .onComplete(()=>{\n                            this.data.toastEl.setAttribute('visible',false);\n                            UI.utils.stoppedChanging(this.data.toastEl.object3D.uuid);\n                        })\n                        .easing(TWEEN.Easing.Exponential.Out).start();\n                })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n            new TWEEN.Tween({x:0.0001})\n                .to({x:0.8}, 350)\n                .onUpdate(function(){\n                    _this.data.toastEl.setAttribute('opacity',this.x);\n                })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    }\n});","/* global AFRAME,THREE */\n/**\n * Scroll Pane for aframe-material-collection. Expects\n * @namespace aframe-material-collection\n * @component ui-scroll-pane\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-scroll-pane', {\n    schema: {\n        height:{type:'number',default:1.2},\n        width:{type:'number',default:2.9},\n        scrollPadding:{type:'number',default:0.05},\n        scrollZOffset:{type:'number',default:0},\n        scrollHandleColor:{default:'#009688'},\n        intersectableClass:{default:'intersectable'},\n        cameraEl:{type:'selector'},\n        lookControlsComponent:{default:'look-controls'},\n    },\n    init() {\n        // Setup scroll bar and panel backing.\n        this.setupElements();\n        // Grab content container.\n        this.container = this.el.querySelector('.container');\n        if(typeof this.container === 'undefined'){\n            throw 'ui-scroll-pane needs an entity inside it with the class \"container\" - <a-entity class=\"container\"></a-entity>';\n        }\n        // Setup scroll bar.\n        this.scrollBarWidth = this.rail.getAttribute('width');\n        this.container.setAttribute('position',(-this.data.width/2)+' '+((this.data.height/2))+' 0');\n        this.rail.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0002));\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0005));\n        this.el.sceneEl.renderer.localClippingEnabled = true;\n\n        // Setup content clips.\n        this.content_clips = [\n            new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.height/2) ),\n            new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.height/2) ),\n            new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.width/2) ),\n            new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.width/2) )\n        ];\n        // Pause/play camera look controls\n        const playPauseCamera = method=>{\n            if(this.data.cameraEl) {\n                let lookControls = this.data.cameraEl.components[this.data.lookControlsComponent];\n                if(lookControls){\n                    lookControls[method]();\n                }\n            }\n        };\n        // Setup mouse move handler for scrolling and updating scroll handle.\n        const mousemove = e=>this.mouseMove(e);\n        // Start scroll\n        this.handle.addEventListener('mousedown',e=>{\n            // Pause look controls to allow scrolling\n            playPauseCamera('pause');\n            this.isDragging = true;\n            // Store the start point offset\n            this.handlePos = this.handle.object3D.worldToLocal(e.detail.intersection.point).y;\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\n            // Start changes\n            UI.utils.isChanging(this.el.sceneEl,this.handle.object3D.uuid);\n            // Prevent default behaviour of event\n            UI.utils.preventDefault(e);\n        });\n        // End scroll\n        const endScroll = e=>{\n            if(this.isDragging){\n                this.backgroundPanel.removeEventListener('ui-mousemove',mousemove);\n                // Play look controls once scrolling is finished\n                playPauseCamera('play');\n                this.isDragging = false;\n                // Stop changes\n                UI.utils.stoppedChanging(this.handle.object3D.uuid);\n                // Prevent default behaviour of event\n                UI.utils.preventDefault(e);\n            }\n        };\n        this.backgroundPanel.addEventListener('mouseup',endScroll);\n        this.backgroundPanel.addEventListener('mouseleave',endScroll);\n        // // Handle clicks on rail to scroll\n        this.rail.addEventListener('mousedown',e=>{\n\n            UI.utils.isChanging(this.el.sceneEl,this.handle.object3D.uuid);\n            // Pause look controls\n            this.isDragging = true;\n            // Reset handle pos to center of handle\n            this.handlePos = 0;\n            // Scroll immediately and register mouse move events.\n            this.scroll(this.rail.object3D.worldToLocal(e.detail.intersection.point).y);\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\n            // Prevent default behaviour of event\n            UI.utils.preventDefault(e);\n        });\n\n        // Setup content clips after the scene is loaded to be able to access all entity materials\n\n        // update content clips world positions from this current element.\n\n        this.updateContent();\n        this.el.emit('scroll-pane-loaded');\n        this.setupMouseWheelScroll();\n\n        // Expose methods to the element to update/set the content of the scroll pane.\n        this.el.setContent = this.setContent.bind(this);\n        this.el.updateContent = this.updateContent.bind(this);\n        this.el.scroll = this.scroll.bind(this);\n    },\n    updateContentClips(){\n        this.el.sceneEl.object3D.updateMatrixWorld();\n        // update content clips world positions from this current element.\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.height/2));\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.height/2));\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.width/2));\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.width/2));\n        //this.el.sceneEl.object3D.updateMatrixWorld();\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\n\n    },\n    setContent(body,noAutoReload){\n        if(this.container) {\n            // Remove all children in the container and all yoga nodes\n            while (this.container.firstChild) {\n                let child = this.container.firstChild;\n                if (this.container.yoga_node&&child.yoga_node) {\n                    this.container.yoga_node.removeChild(child.yoga_node);\n                }\n                if(child.object3D){\n                    UI.utils.clearObject(child.object3D);\n                }\n                this.container.removeChild(child);\n                this.container.firstChild = null;\n            }\n            // Set the content in the scroll pane.\n            return new Promise(resolve=>{\n                let loadedWrapper = document.createElement('a-entity');\n                loadedWrapper.setAttribute('visible',false);\n                loadedWrapper.insertAdjacentHTML('afterbegin',body);\n                loadedWrapper.addEventListener('loaded',e=>{\n                    // Trigger an update to redraw scrollbars and fire change events.\n                    if(!noAutoReload)this.updateContent();\n                    resolve(loadedWrapper);\n                    loadedWrapper.setAttribute('visible',true)\n                });\n                this.container.appendChild(loadedWrapper);\n            })\n        }\n    },\n    updateContent(should_not_scroll){\n        this.updateContentClips();\n        this.currentUuid = THREE.Math.generateUUID();\n        UI.utils.isChanging(this.el.sceneEl,this.currentUuid);\n        this.setChildClips();\n        if(typeof Yoga !== 'undefined')this.initialiseYoga(this.container,this.data.width*100);\n        this.container.yoga_node.calculateLayout(this.data.width*100, 'auto', Yoga.DIRECTION_LTR);\n        this.content_height = Number.NEGATIVE_INFINITY;\n        if(typeof Yoga !== 'undefined')this.updateYoga(this.container);\n\n        this.handleSize = THREE.Math.clamp((this.data.height/this.content_height),0.1,1);\n        this.handle.setAttribute('width',this.handleSize===1?0.00000001:0.1);\n        this.rail.setAttribute('width',this.handleSize===1?0.00000001:0.1);\n        this.rail.setAttribute('color',this.handleSize===1?'#efefef':'#fff');\n        this.handle.setAttribute('height',this.data.height*this.handleSize);\n        if(!should_not_scroll){\n            this.container.object3D.position.y = this.data.height/2;\n            this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+(this.data.height-(this.data.height*this.handleSize))/2+' '+(this.data.scrollZOffset+0.0005));\n        }\n    },\n    mouseMove(e){\n        if(this.isDragging){\n            let pos = this.rail.object3D.worldToLocal(e.detail.intersection.point);\n            this.scroll(pos.y-this.handlePos);\n        }\n    },\n    scroll(positionY){\n        let min = (-this.data.height/2)+(this.data.height*this.handleSize)/2;\n        let max = (this.data.height/2)-(this.data.height*this.handleSize)/2;\n        // Set scroll position with start point offset.\n        let scroll_pos = THREE.Math.clamp(positionY,min,max);\n        let scroll_perc = this.handleSize===1?0:1-((scroll_pos-min)/(max-min));\n        this.container.object3D.position.y = ((this.content_height-this.data.height)*scroll_perc)+(this.data.height/2);\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+scroll_pos+' '+(this.data.scrollZOffset+0.0005));\n    },\n    setupMouseWheelScroll(){\n        this.backgroundPanel.addEventListener('ui-mousewheel',e=>{\n            if(this.handleSize!==1){\n                // Start changes\n                UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n                this.scroll(this.handle.getAttribute('position').y+(e.detail.evt.deltaY<0?0.1:-0.1));\n                // Stop changes\n                UI.utils.stoppedChanging(this.el.object3D.uuid);\n                UI.utils.preventDefault(e);\n            }\n        });\n    },\n    setupElements(){\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\n        this.backgroundPanel = document.createElement('a-plane');\n        this.backgroundPanel.setAttribute('class','background '+this.data.intersectableClass);\n        this.backgroundPanel.setAttribute('width',this.data.width+1);\n        this.backgroundPanel.setAttribute('height',this.data.height+1);\n        this.backgroundPanel.setAttribute('position','0 0 -0.013');\n        this.backgroundPanel.setAttribute('opacity',0.0001);//\n        this.backgroundPanel.setAttribute('transparent',true);\n\n        this.el.appendChild(this.backgroundPanel);\n\n        // Add scroll bar rail.\n        this.rail = document.createElement('a-plane');\n        this.rail.setAttribute('class','rail '+this.data.intersectableClass);\n        this.rail.setAttribute('width',0.1);\n        this.rail.setAttribute('height',this.data.height);\n        this.rail.setAttribute('shader','flat');\n        this.el.appendChild(this.rail);\n\n        // Add scroll bar handle.\n        this.handle = document.createElement('a-plane');\n        this.handle.setAttribute('class','handle '+this.data.intersectableClass);\n        this.handle.setAttribute('width',0.1);\n        this.handle.setAttribute('height',this.data.height);\n        this.handle.setAttribute('color',this.data.scrollHandleColor);\n        this.handle.setAttribute('shader','flat');\n        this.el.appendChild(this.handle);\n    },\n    setupYogaNode(node,width,height,properties){\n        // Parse yoga properties and call the yoga methods to setup this layout node.\n        if(!properties.hasOwnProperty('setWidth'))node.setWidth(width);\n        if(!properties.hasOwnProperty('setHeight'))node.setHeight(height);\n        for(let method in properties){\n            if(properties.hasOwnProperty(method)&&method.indexOf('Edge')===-1){\n                if([\"setMarginLeft\",\"setMarginPercentLeft\",\"setPaddingLeft\",\"setBorderLeft\",\"setPositionLeft\",\"setPositionPercentLeft\"]\n                    .indexOf(method)>-1){\n                    node[method](Yoga.EDGE_LEFT,properties[method]);\n                }else if([\"setMarginRight\",\"setMarginPercentRight\",\"setPaddingRight\",\"setBorderRight\",\"setPositionRight\",\"setPositionPercentRight\"]\n                    .indexOf(method)>-1){\n                    node[method](Yoga.EDGE_RIGHT,properties[method]);\n                }else if([\"setMarginTop\",\"setMarginPercentTop\",\"setPaddingTop\",\"setBorderTop\",\"setPositionTop\",\"setPositionPercentTop\"]\n                    .indexOf(method)>-1){\n                    node[method](Yoga.EDGE_TOP,properties[method]);\n                }else if([\"setMarginBottom\",\"setMarginPercentBottom\",\"setPaddingBottom\",\"setBorderBottom\",\"setPositionBottom\",\"setPositionPercentBottom\"]\n                    .indexOf(method)>-1){\n                    node[method](Yoga.EDGE_BOTTOM,properties[method]);\n                }else if([\"setMargin\",\"setMarginPercent\",\"setPadding\",\"setBorder\",\"setPosition\",\"setPositionPercent\"]\n                    .indexOf(method)>-1){\n                    node[method](Yoga.EDGE_ALL,properties[method]);\n                }else if(method.indexOf('setMarginAuto')>-1){\n                    let side = method.replace('setMarginAuto','');\n                    switch(side){\n                        case \"\":\n                            node[method](Yoga.EDGE_ALL);\n                            break;\n                        case \"Left\":\n                            node[method](Yoga.EDGE_LEFT);\n                            break;\n                        case \"Right\":\n                            node[method](Yoga.EDGE_RIGHT);\n                            break;\n                        case \"Top\":\n                            node[method](Yoga.EDGE_TOP);\n                            break;\n                        case \"Bottom\":\n                            node[method](Yoga.EDGE_BOTTOM);\n                            break;\n                    }\n                }else if([\"setWidthAuto\",\"setHeightAuto\"]\n                    .indexOf(method)>-1) {\n                    node[method]();\n                }else{\n                    node[method](properties[method]);\n                }\n            }\n        }\n    },\n    initialiseYoga(parent){\n        // Traverse the tree and setup Yoga layout nodes with default settings\n        // or settings specified in the elements yoga properties component.\n        parent = parent||this.container;\n        // Automatically detect the entity width / height by the element tagname.\n        let width = 0,height = 0;\n        let geo = parent.getAttribute('geometry');\n        switch(parent.tagName){\n            case \"A-TEXT\":\n            case \"A-TRIANGLE\":\n            case \"A-UI-TEXT-INPUT\":\n            case \"A-UI-NUMBER-INPUT\":\n            case \"A-UI-INT-INPUT\":\n            case \"A-UI-INPUT-TEXT\":\n            case \"A-UI-PASSWORD-INPUT\":\n                width = parent.getAttribute('width');\n                height = parent.getAttribute('height');\n                break;\n            case \"A-UI-BUTTON\":\n            case \"A-PLANE\":\n            case \"A-ENTITY\":\n                width = Number(geo?geo.width:parent.getAttribute('width'));\n                height = Number(geo?geo.height:parent.getAttribute('height'));\n                break;\n            case \"A-UI-FAB-BUTTON\":\n            case \"A-UI-FAB-BUTTON-SMALL\":\n            case \"A-CIRCLE\":\n                width = Number(geo?geo.radius*2:(parent.getAttribute('radius')||0)*2);\n                height = width;\n                break;\n            case \"A-RING\":\n                width = Number(geo?geo[\"radius-outer\"]*2:(parent.getAttribute('radius-outer')||0)*2);\n                height = width;\n                break;\n            case \"A-UI-SLIDER\":\n            case \"A-UI-NUMBER\":\n            case \"A-UI-SWITCH\":\n            case \"A-UI-CHECKBOX\":\n            case \"A-UI-RADIO\":\n                let componentName = parent.tagName.substr(2).toLowerCase();\n                width = parent.getAttribute(componentName).width;\n                height = parent.getAttribute(componentName).height;\n                break;\n        }\n\n        if(!parent.yoga_node){\n            parent.yoga_node = Yoga.Node.create();\n            let ui_yoga = parent.getAttribute(\"ui-yoga\");\n            if(ui_yoga&&parent.getYogaProperties){\n                this.setupYogaNode(parent.yoga_node,width ? width * 100 : 'auto',height ? height * 100 : 'auto',\n                    parent.getYogaProperties());\n            }else{\n                parent.yoga_node.setWidth(width ? width * 100 : 'auto');\n                parent.yoga_node.setHeight(height ? height * 100 : 'auto');\n                parent.yoga_node.setJustifyContent(Yoga.JUSTIFY_FLEX_START);\n                parent.yoga_node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW);\n                parent.yoga_node.setAlignContent(Yoga.ALIGN_AUTO);\n                parent.yoga_node.setFlexWrap(Yoga.WRAP_WRAP);\n            }\n            // Add the yoga node to the Yoga tree.\n            if(parent.parentElement&&parent.parentElement.yoga_node){\n                // Default margin if none set;\n                if(!ui_yoga){\n                    parent.yoga_node.setMargin(Yoga.EDGE_RIGHT, 5);\n                    parent.yoga_node.setMargin(Yoga.EDGE_BOTTOM, 5);\n                }\n                parent.parentElement.yoga_node.insertChild(parent.yoga_node,parent.parentElement.yoga_node.getChildCount());\n            }else{\n                // Default root padding if none set;\n                if(!ui_yoga){\n                    parent.yoga_node.setPadding(Yoga.EDGE_ALL,2);\n                }\n            }\n        }\n        for(let i = 0; i < parent.childNodes.length; i++) {\n            let child = parent.childNodes[i];\n            if (child.nodeType === 1) {\n                if(child.classList.contains('no-yoga-layout')){\n                    return;\n                }\n                this.initialiseYoga(child);\n            }\n        }\n    },\n    updateYoga(parent){\n        // Update the entity positions from the Yoga layout.\n        for(let i = 0; i < parent.childNodes.length; i++){\n            let child = parent.childNodes[i];\n            if(child.nodeType === 1){\n                if(child.classList.contains('no-yoga-layout')){\n                    return;\n                }\n                let position;\n                if(child.tagName===\"A-ENTITY\"){\n                    position = {\n                        x:(child.yoga_node.getComputedLeft()/100),\n                        y:(child.yoga_node.getComputedTop()/100),\n                    };\n                }else{\n                    position = {\n                        x:(child.yoga_node.getComputedLeft()/100)+(child.yoga_node.getComputedWidth()/200),\n                        y:(child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/200),\n                    };\n                }\n                let highest = (child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/100);\n                if(highest>this.content_height){\n                    this.content_height = highest;\n                }\n                child.setAttribute('position',position.x+' '+(-position.y)+' 0.0001');//+child.getAttribute('position').z);\n            }\n            this.updateYoga(child);\n        }\n    },\n\n    setChildClips(parent){\n        // Traverse the entity tree inside the content container and add content clips to each material found.\n        parent = parent||this.container;\n        for(let i = 0; i < parent.childNodes.length; i++) {\n            let child = parent.childNodes[i];\n            //if (child.nodeType === 1) {\n            child._content_clips = this.content_clips;\n            let traverse = ()=>{\n                if(child.object3D){\n                    child.object3D.traverse(object=>{\n                        if(object.material){\n                            // Add shader chunks to be able to clip shader materials - needed for <a-text> entities.\n                            if(object.material.isRawShaderMaterial){\n                                object.material.onBeforeCompile = function ( shader ) {\n                                    let vertexParts = shader.vertexShader.split('\\n');\n                                    let vertexMainIndex = vertexParts.indexOf('void main(void) {');\n                                    vertexParts.splice(vertexMainIndex,0,'#include <clipping_planes_pars_vertex>');\n                                    vertexParts.splice(vertexMainIndex+2,0,'#include <begin_vertex>');\n                                    vertexParts.splice(vertexParts.length-2,0,'#include <project_vertex>');\n                                    vertexParts.splice(vertexParts.length-2,0,'#include <clipping_planes_vertex>');\n                                    shader.vertexShader = vertexParts.join('\\n');\n                                    let fragmentParts = shader.fragmentShader.split('\\n');\n                                    let fragmentMainIndex = fragmentParts.indexOf('void main() {');\n                                    fragmentParts.splice(fragmentMainIndex,0,'#include <clipping_planes_pars_fragment>');\n                                    fragmentParts.splice(fragmentMainIndex+2,0,'#include <clipping_planes_fragment>');\n                                    shader.fragmentShader = fragmentParts.join('\\n');\n                                };\n                                object.material.clipping = true;\n                            }\n                            // Set the content clipping planes.\n                            object.material.clippingPlanes = this.content_clips;\n                            object.material.clipShadows = true;\n                            object.material.needsUpdate = true;\n                        }\n                    });\n                }\n            };\n            // Wait for next tick - exokit required this.\n            setTimeout(()=>{\n                if(child.getAttribute){\n                    let text = child.getAttribute('text');\n\n                    if(text){\n                        // Wait for the font to load first.\n                        child.addEventListener('textfontset',()=>{\n                            clearTimeout(this.fontRenderTimeout);\n                            this.fontRenderTimeout = setTimeout(()=>UI.utils.stoppedChanging(this.currentUuid),500);\n                            traverse();\n                        })\n                    }else{\n                        traverse();\n                    }\n                }\n            },0);\n            // }\n            // Recurse\n            this.setChildClips(child);\n        }\n    }\n});","/* global AFRAME,TWEEN */\n/**\n * Checkbox Component for aframe-material-collection. Includes animation and disabled state.\n * @namespace aframe-material-collection\n * @component ui-checkbox\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-checkbox', {\n    schema: {\n        value: {type:'boolean',default: false},\n        selectedColor: {default: '#009688'},\n        unselectedColor: {default: '#7f7f7f'},\n        disabledColor: {default: '#afafaf'},\n        indeterminate: {type:'boolean',default: false},\n        disabled:{type:'boolean',default: false},\n        intersectableClass: {default: 'intersectable'},\n        width:{type:'number',default: 0.15},\n        height:{type:'number',default: 0.15},\n    },\n    init() {\n        this.width = 0.15;\n        this.height = 0.15;\n        this.container = document.createElement('a-entity');\n        this.container.setAttribute('class','no-yoga-layout');\n        this.el.appendChild(this.container);\n        this.setupLines();\n        // Add backing element to make the whole object clickable.\n        let backing = document.createElement('a-plane');\n        backing.setAttribute('width',0.105);\n        backing.setAttribute('height',0.105);\n        backing.setAttribute('position','0 0 -0.002');\n        backing.setAttribute('shader','flat');\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\n        backing.setAttribute('opacity',0.0001);\n        backing.setAttribute('transparent',true);\n        this.el.appendChild(backing);\n        this.clickHandler = ()=>{\n            this.data.value = !this.data.value;\n            this.click();\n        };\n        // Setup initial state\n        this.setSelected();\n        this.setDisabled();\n        this.setTransform(1);\n    },\n    updateSchema(){\n        if(this.data){\n            this.setDisabled();\n            if(this.data.disabled){\n                if(this.data.value){\n                    this.data.value=false;\n                    this.data.indeterminate=false;\n                    this.click();\n                }\n            }else{\n                this.click();\n            }\n        }\n    },\n    setTransform(x){\n        // Adjust position and rotation based on the interpolated value x between 0 and 1.\n        // Used to offset the checkbox when in a checked state\n        if(this.data.value){\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45*x});\n            this.container.setAttribute('position',{x:-0.025*x,y:0.05*x,z:0});\n        }else{\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45+(45*x)});\n            this.container.setAttribute('position',{x:0.025-(0.025*x),y:0.05-(0.05*x),z:0});\n        }\n    },\n    click(){\n        // Reset indeterminate state on click\n        this.data.indeterminate = false;\n        // Hide / Show left and top lines for checked state, or right line aswell for intermediate state.\n        this.setSelected();\n        // run animation\n        this.animateSelected()\n    },\n    animateSelected(){\n        let _this = this;\n        // Start changes\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n        new TWEEN.Tween({x:0})\n            .to({ x: 1}, 200)\n            .onUpdate(function(){\n                _this.setTransform(this.x);\n            })\n            .onComplete(function(){\n                // Stop changes\n                UI.utils.stoppedChanging(_this.el.object3D.uuid);\n            })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    },\n    setSelected(){\n        // Hide / Show lines that make up checkbox based on the current state.\n        if(this.data.value){\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\n            this.bottomLine.setAttribute('scale','1 1 1');\n            this.rightLine.setAttribute('scale','1 1 1');\n            this.bottomLine.setAttribute('position','0.025 -0.05 0');\n            this.rightLine.setAttribute('position','0.05 0 0');\n            this.bottomLine.setAttribute('rotation','0 0 90');\n            this.bottomLine.setAttribute('height',0.05);\n            this.bottomLine.setAttribute('color',this.data.selectedColor);\n            this.rightLine.setAttribute('color',this.data.selectedColor);\n        }else if(this.data.indeterminate){\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\n            this.bottomLine.setAttribute('scale','1 1 1');\n            this.rightLine.setAttribute('scale','0.000001 0.000001 0.000001');\n            this.bottomLine.setAttribute('position','0 0 0');\n            this.bottomLine.setAttribute('rotation','0 0 90');\n            this.bottomLine.setAttribute('height',0.1);\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\n        }else{\n            this.topLine.setAttribute('scale','1 1 1');\n            this.leftLine.setAttribute('scale','1 1 1');\n            this.bottomLine.setAttribute('scale','1 1 1');\n            this.rightLine.setAttribute('scale','1 1 1');\n            this.bottomLine.setAttribute('height',0.1);\n            this.leftLine.setAttribute('position','-0.05 0 0');\n            this.rightLine.setAttribute('position','0.05 0 0');\n            this.topLine.setAttribute('position','0 0.05 0');\n            this.bottomLine.setAttribute('position','0 -0.05 0');\n            this.topLine.setAttribute('rotation','0 0 90');\n            this.bottomLine.setAttribute('rotation','0 0 90');\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\n        }\n    },\n    setupLines(){\n        // Add four lines to make a square wireframe\n        this.leftLine = this.line(true);\n        this.rightLine = this.line(true);\n        this.topLine = this.line(true);\n        this.bottomLine = this.line(true);\n        this.container.appendChild(this.topLine);\n        this.container.appendChild(this.leftLine);\n        this.container.appendChild(this.bottomLine);\n        this.container.appendChild(this.rightLine);\n    },\n    setDisabled(){\n        // Check and set the disabled state of the checkbox - add / remove click handler.\n        if(this.data.disabled){\n            this.el.removeEventListener('mousedown',this.clickHandler);\n            this.topLine.setAttribute('color',this.data.disabledColor);\n            this.leftLine.setAttribute('color',this.data.disabledColor);\n            this.rightLine.setAttribute('color',this.data.disabledColor);\n            this.bottomLine.setAttribute('color',this.data.disabledColor);\n        }else{\n            this.el.addEventListener('mousedown',this.clickHandler);\n            this.topLine.setAttribute('color',this.data.unselectedColor);\n            this.leftLine.setAttribute('color',this.data.unselectedColor);\n            this.rightLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\n            this.bottomLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\n        }\n    },\n    line(is_vertical){\n        // Create horizontal/vertical line.\n        let line = document.createElement('a-plane');\n        line.setAttribute('width',is_vertical?0.01:0.105);\n        line.setAttribute('height',is_vertical?0.105:0.01);\n        line.setAttribute('class','no-yoga-layout');\n        line.setAttribute('shader','flat');\n        return line;\n    }\n});","/* global AFRAME,TWEEN */\n/**\n * Radio Component for aframe-material-collection. Resets other radio buttons siblings and includes a disabled state.\n * @namespace aframe-material-collection\n * @component ui-radio\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent(\"ui-radio\", {\n  schema: {\n    value: { default: \"\" },\n    selected: { type: \"boolean\", default: false },\n    selectedColor: { default: \"#009688\" },\n    selectedRadius: { type: \"number\", default: 0.045 },\n    unselectedColor: { default: \"#5f5f5f\" },\n    disabledColor: { default: \"#afafaf\" },\n    disabled: { type: \"boolean\", default: false },\n    intersectableClass: { default: \"intersectable\" },\n    width: { type: \"number\", default: 0.15 },\n    height: { type: \"number\", default: 0.15 }\n  },\n  init() {\n    this.width = 0.15;\n    this.height = 0.15;\n    // Create center circle for checked state.\n    this.filled_circle = document.createElement(\"a-circle\");\n    this.filled_circle.setAttribute(\"radius\", this.data.selectedRadius);\n    this.filled_circle.setAttribute(\"scale\", \"0 0 0\");\n    this.filled_circle.setAttribute(\"color\", this.data.disabled ? this.data.disabledColor : this.data.selectedColor);\n    this.filled_circle.setAttribute(\"shader\", \"flat\");\n    this.filled_circle.setAttribute(\"class\", this.data.intersectableClass + \"no-yoga-layout\");\n    this.filled_circle.setAttribute(\"segments\", 6);\n    this.el.components.material.material.color = new THREE.Color(this.data.disabled ? this.data.disabledColor : this.data.unselectedColor);\n    this.el.appendChild(this.filled_circle);\n    // Create backing for getting click events.\n    this.backing = document.createElement(\"a-circle\");\n    this.backing.setAttribute(\"radius\", this.data.selectedRadius);\n    this.backing.setAttribute(\"position\", \"0 0 0.01\");\n    this.backing.setAttribute(\"class\", this.data.intersectableClass + \" no-yoga-layout\");\n    this.backing.setAttribute(\"shader\", \"flat\");\n    this.backing.setAttribute(\"segments\", 6);\n    this.backing.setAttribute(\"opacity\", 0.0001);\n    this.backing.setAttribute(\"transparent\", true);\n\n    this.el.appendChild(this.backing);\n\n    // Set this if it is checked.\n    if (this.data.selected) {\n      this.click();\n    }\n\n    this.clickHandler = e => {\n      this.click(e);\n      // Prevent default behaviour of event\n      if (e.detail.preventDefault) {\n        e.detail.preventDefault();\n      }\n    };\n  },\n  play() {\n    // Add / Remove click handlers based on disabled state.\n    if (this.data.disabled) {\n      this.backing.removeEventListener(\"mousedown\", this.clickHandler);\n      this.filled_circle.removeEventListener(\"mousedown\", this.clickHandler);\n    } else {\n      this.backing.addEventListener(\"mousedown\", this.clickHandler);\n      this.filled_circle.addEventListener(\"mousedown\", this.clickHandler);\n    }\n  },\n  pause() {\n    if (!this.data.disabled) {\n      this.backing.removeEventListener(\"mousedown\", this.clickHandler);\n      this.filled_circle.removeEventListener(\"mousedown\", this.clickHandler);\n    }\n  },\n  deselect() {\n    // Deselect this radio with a scale animation on the circle.\n    this.el.setAttribute(\"selected\", false);\n    let _this = this;\n    // Start changes\n    UI.utils.isChanging(this.el.sceneEl, this.filled_circle.object3D.uuid);\n    new TWEEN.Tween({ x: 1 })\n      .to({ x: 0.000001 }, 200)\n      .onUpdate(function() {\n        _this.filled_circle.object3D.scale.set(this.x, this.x, this.x);\n      })\n      .onComplete(() => {\n        // Stop changes\n        UI.utils.stoppedChanging(_this.filled_circle.object3D.uuid);\n        this.isRippling = false;\n      })\n      .easing(TWEEN.Easing.Exponential.Out)\n      .start();\n  },\n  click() {\n    // Get all other radio siblings and reset their state if they are selected.\n    [].slice\n      .call(this.el.parentNode.querySelectorAll(\"a-ring,a-ui-radio\"))\n      .filter(el => el !== this.el)\n      .forEach(ring => {\n        if (ring.components[\"ui-radio\"] && ring.getAttribute(\"selected\") === \"true\") {\n          ring.components[\"ui-radio\"].deselect();\n        }\n      });\n    // Emit the current selected value\n    this.el.emit(\"ui-radio-changed\", this.data.value);\n    // Set this radio's selected state.\n    this.el.setAttribute(\"selected\", true);\n    // Throttle animations.\n    if (this.isSelecting) return;\n    this.isSelecting = true;\n    let _this = this;\n    // Start changes\n    UI.utils.isChanging(this.el.sceneEl, this.filled_circle.object3D.uuid);\n    new TWEEN.Tween({ x: 0.000001 })\n      .to({ x: 1 }, 250)\n      .onUpdate(function() {\n        _this.filled_circle.object3D.scale.set(this.x, this.x, this.x);\n      })\n      .onComplete(() => {\n        // Stop changes\n        UI.utils.stoppedChanging(this.filled_circle.object3D.uuid);\n        this.isSelecting = false;\n      })\n      .easing(TWEEN.Easing.Exponential.Out)\n      .start();\n  }\n});\n","/* global AFRAME */\n/**\n * A curved-plane component to curve a plane primitive.\n * @namespace aframe-material-collection\n * @component ui-curved-plane\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-curved-plane', {\n    schema: {\n        depth:{type:'number',default:0.03}\n    },\n    init(){\n        let mesh = this.el.getObject3D('mesh');\n        let width = this.el.getAttribute('width');\n        let height = this.el.getAttribute('height');\n        let browser_pane = new THREE.PlaneGeometry(width, height, 5, 1);\n        let curve = new THREE.CubicBezierCurve3(\n            browser_pane.vertices[0],\n            new THREE.Vector3(0.375*width, 0, -this.data.depth*width ),\n            new THREE.Vector3(0.625*width, 0, -this.data.depth*width ),\n            browser_pane.vertices[(browser_pane.vertices.length/2) - 1]\n        );\n        let planePoints = curve.getPoints(Math.abs(browser_pane.vertices.length/2)-1);\n        for (let edgeI = 1; edgeI < 3; edgeI++) {\n            for (let pointI = 0; pointI < planePoints.length; pointI++) {\n                browser_pane.vertices[(edgeI === 2 ? planePoints.length + pointI : pointI)].z = planePoints[pointI].z;\n            }\n        }\n        mesh.geometry = browser_pane;\n    }\n});","/* global AFRAME */\n/**\n * A component to render the UI to a flat plane, removing the objects from the scene and rendering them separately to a\n * render target.\n * @namespace aframe-material-collection\n * @component ui-renderer\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-renderer', {\n    schema: {\n        uiPanel: {type: 'selector'},\n        lookControlsEl: {type: 'selector'},\n        lookControlsComponent:{default:'look-controls'},\n        panelPosition:{type:'vec3',default:{x:0,y:1.6,z:-1}},\n        panelSize:{type:'vec2',default:{x:6,y:3}},\n        renderResolution:{type:'vec2',default:{x:2048,y:1024}},\n        debugRaycaster:{type:'boolean',default: false},\n        fps:{type:'number',default:60},\n        intersectableClass:{default:'intersectable'},\n        debug:{type:'boolean',default:false},\n        initDelay:{type:'int',default:0},\n    },\n    init() {\n        this.setupBackDrop();\n        if(!this.data.uiPanel){\n            this.meshEl = this.setupUIPanel();\n        }else{\n            this.meshEl = this.data.uiPanel;\n        }\n        // Remove this object from the scene to be rendered separately.\n        this.el.object3D.parent.remove(this.el.object3D);\n        // Setup fixed camera nd render target.\n        this.camera = new THREE.PerspectiveCamera( 100, 2, 0.1, 1000 );\n        // Setup render target\n        this.renderTarget = new THREE.WebGLRenderTarget(this.data.renderResolution.x,this.data.renderResolution.y, { antialias: true } );\n        // Set the texture to the ui panel mesh.\n        this.meshEl.getObject3D('mesh').material.map = this.renderTarget.texture;\n        // emit ready event for anythng wanting to use this texture.\n        this.meshEl.emit('texture-ready',this.renderTarget.texture);\n        // Listen for change events to enable rendering.\n        this.stoppedRendering = false;\n        this.isRendering = true;\n        // Listen for change events to enable/disable rendering\n        this.el.sceneEl.addEventListener('ui-changing',()=>{\n            //console.log(JSON.stringify(new Date()),'ui-changing');\n            this.stoppedRendering = false;\n            this.isRendering = true;\n        });\n        this.el.sceneEl.addEventListener('ui-changing-stopped',()=>{\n            //console.log(JSON.stringify(new Date()),'ui-changing-stopped');\n            this.isRendering = false;\n        });\n        // Setup raycaster for relaying mouse/keyboard events\n        this.raycaster = new THREE.Raycaster();\n        this.helper = new THREE.Mesh(new THREE.SphereGeometry(0.01),new THREE.MeshBasicMaterial({color:'#ff0000'}));\n        // Add cursor helper to object\n        if(this.data.debugRaycaster)this.el.object3D.add(this.helper);\n        // Set last render time\n        this.lastRenderTime = 0;\n        this.isFrozen = false;\n\n        // Expose methods to the element to pause/play the renderer.\n        this.el.pauseRender = this.pauseRender.bind(this);\n        this.el.playRender = this.playRender.bind(this);\n        this.isReady = false;\n        setTimeout(()=>{this.isReady = true;},this.data.initDelay);\n    },\n    pauseRender(time){\n        return this.playRender(time,true)\n    },\n    playRender(time,isPaused){\n        let _this = this;\n        return new Promise(resolve=>{\n            if(_this.isFrozen===isPaused||_this.isAnimatingBackground)return resolve();\n            _this.isAnimatingBackground = true;\n            if(!_this.isFrozen)this.backdrop.setAttribute('scale','1 1 1');\n            let fromScale = _this.isFrozen?0.9:0.000001;\n            let toScale = _this.isFrozen?0.000001:0.9;\n            let duration = _this.isFrozen?time||350:time||500;\n            if(_this.isFrozen){\n                _this.isFrozen = isPaused;\n                _this.play();\n            }\n            UI.utils.isChanging(_this.el.sceneEl,_this.backdrop.uuid);\n            new TWEEN.Tween({x:fromScale})\n                .to({x:toScale}, duration)\n                .onUpdate(function(){\n                    _this.backdrop.setAttribute('opacity',this.x);\n                })\n                .onComplete(()=>{\n                    _this.isFrozen = isPaused;\n                    _this.isAnimatingBackground = false;\n                    if(_this.isFrozen){\n                        _this.pause();\n                    }else{\n                        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\n                    }\n                    // Stop changes\n                    UI.utils.stoppedChanging(this.backdrop.uuid);\n                    resolve();\n                })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    },\n    setupBackDrop(){\n        this.backdrop = document.createElement('a-plane');\n        this.backdrop.setAttribute('transparent',true);\n        this.backdrop.setAttribute('opacity',0.000001);\n        this.backdrop.setAttribute('color','#000');\n        this.backdrop.setAttribute('shader','flat');\n        this.backdrop.setAttribute('position',{x:0,y:0,z:-0.2});\n        this.backdrop.setAttribute('width',1);\n        this.backdrop.setAttribute('height',1);\n        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\n        this.el.appendChild(this.backdrop);\n    },\n    play(){\n        this.lastMouseMoveTime = 0;\n        // Register event listeners\n        // Mousedown and mouseup do not have the correct intersection point. Use last mouse move event if available instead.\n        // TODO: raise issue with aframe / submit PR;\n        this.click = e=>this.mouseEvent('click',this.lastMoveEvent||e);\n        this.mousedown = e=>this.mouseEvent('mousedown',this.lastMoveEvent||e);\n        this.mouseup = e=>this.mouseEvent('mouseup',this.lastMoveEvent||e);\n        this.mousewheel = e=>this.mouseEvent('ui-mousewheel',e.detail.evt);\n        this.mousemove = e=>{\n            // Save mousemove event for mousedown/mouseup events.\n            this.lastMoveEvent = e;\n            this.mouseEvent('ui-mousemove',e);\n        };\n        this.meshEl.addEventListener('mousedown',this.mousedown);\n        this.meshEl.addEventListener('mouseup',this.mouseup);\n        this.meshEl.addEventListener('click',this.click);\n        this.meshEl.addEventListener('ui-mousemove',this.mousemove);\n        this.meshEl.addEventListener('ui-mousewheel',this.mousewheel);\n    },\n    pause(){\n        this.meshEl.removeEventListener('mousedown',this.mousedown);\n        this.meshEl.removeEventListener('mouseup',this.mouseup);\n        this.meshEl.removeEventListener('click',this.click);\n        this.meshEl.removeEventListener('ui-mousemove',this.mousemove);\n        this.meshEl.removeEventListener('ui-mousewheel',this.mousewheel);\n    },\n    setupUIPanel(){\n        let uiPanel = document.createElement('a-plane');\n        uiPanel.setAttribute('position',this.data.panelPosition);\n        uiPanel.setAttribute('width',this.data.panelSize.x);\n        uiPanel.setAttribute('height',this.data.panelSize.y);\n        this.el.sceneEl.appendChild(uiPanel);\n        return uiPanel;\n    },\n    mouseEvent(type,e){\n        let mouse = {x:0,y:0};\n        if(e.detail.intersection){\n            let localPoint = this.meshEl.object3D.worldToLocal(e.detail.intersection.point.clone());\n\n            mouse = {\n                x:localPoint.x/this.meshEl.getAttribute('width')*2,\n                y:localPoint.y/this.meshEl.getAttribute('height')*2\n            };\n        }\n        if(type==='ui-mousewheel'&&e.detail.evt){\n            mouse.deltaY = e.detail.deltaY;\n            mouse.deltaX = e.detail.deltaX;\n        }\n        if(type==='mousedown'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\n            this.lookControlsEl.components[this.data.lookControlsComponent].pause()\n        }\n        if(type==='mouseup'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\n            this.lookControlsEl.components[this.data.lookControlsComponent].play()\n        }\n        this.raycastIntersections(e,mouse,type);\n    },\n    raycastIntersections(e,mouse,type){\n        if(!this.camera)return;\n        //console.log(mouse);\n        this.raycaster.setFromCamera( mouse, this.camera );\n        // this.helper.setDirection(this.raycaster.ray.direction);\n        let intersections = this.raycaster.intersectObjects( this.el.object3D.children, true );\n        this.prevIntersectionEls = this.prevIntersectionEls||[];\n        let intersectionEls = [];\n        if(intersections.length&&this.data.debugRaycaster){\n            let intersectionPoint = intersections[0].point;\n            if(intersections[0].object===this.helper&&intersections.length>1){\n                intersectionPoint = intersections[1].point;\n            }\n            this.helper.position.copy(intersectionPoint);\n            this.helper.position.x-=0.03;\n        }\n        let defaultPrevented = false;\n        for(let i = 0;i < intersections.length; i++){\n            let intersection = intersections[i];\n            // Only emit events on objecst with an element attached\n            if(intersection.object.el&&intersection.object.el.classList.contains(this.data.intersectableClass)){\n                let currentEvent = {intersection:intersection,evt:e,preventDefault:()=>{defaultPrevented=true}};\n                // If this is the first time weve seen this element then emit the mouseenter event.\n                if(this.prevIntersectionEls.indexOf(intersection.object.el)===-1&&!defaultPrevented){\n                    intersection.object.el.emit('mouseenter',currentEvent);\n                }\n                // Emit the mouse event received\n                if(!defaultPrevented||type==='ui-mousewheel'){\n                    intersection.object.el.emit(type,currentEvent);\n                }\n                // Store the intersection on the element.\n                intersection.object.el.intersection = intersection;\n                // Add the current el to the list to check against previous intersection els.\n                intersectionEls.push(intersection.object.el);\n            }\n        }\n        // Find any intersections that have disappeared to emit the mouse leave event.\n        for(let i = 0;i < this.prevIntersectionEls.length; i++){\n            let intersectionEl = this.prevIntersectionEls[i];\n            if(intersectionEls.indexOf(intersectionEl)===-1){\n                intersectionEl.emit('mouseleave',{intersection:intersectionEl.intersection});\n            }\n        }\n        // Store the current intersected elements for the next iteration.\n        this.prevIntersectionEls = intersectionEls;\n    },\n    tick(delta){\n        if(this.isFrozen||this.stoppedRendering||!this.isReady)return;\n        if(delta-this.lastRenderTime<(1000/this.data.fps)&&this.isRendering)return;\n        this.el.object3D.traverse(child=>{\n            child.updateMatrixWorld();\n        });\n\n        let renderer = this.el.sceneEl.renderer;\n        let vrModeEnabled = renderer.vr.enabled;\n        renderer.vr.enabled = false;\n        renderer.render(this.el.object3D,this.camera,this.renderTarget);\n        renderer.vr.enabled = vrModeEnabled;\n        this.lastRenderTime = delta;\n        if(!this.isRendering){\n            this.stoppedRendering = true;\n        }\n    }\n});","/* global AFRAME */\n/**\n * Text Input Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-text-input\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-text-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\":{\n            placeHolder:'Text...'\n        },\n        \"ui-double-click\":{}\n    },\n    mappings: {\n        width:\"ui-text.width\",\n        height:\"ui-text.height\",\n        value:\"ui-text.value\",\n        \"place-holder\":\"ui-text.placeHolder\"\n    }\n}));","/* global AFRAME */\n/**\n * Number Input Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-number-input\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-number-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\":{\n            type:'number',\n            placeHolder:'Number...'\n        },\n        \"ui-double-click\":{}\n    },\n    mappings: {\n        width:\"ui-text.width\",\n        height:\"ui-text.height\",\n        value:\"ui-text.value\",\n        \"place-holder\":\"ui-text.placeHolder\"\n    }\n}));","/* global AFRAME */\n/**\n * Integer Input Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-int-input\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-int-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\":{\n            type:'int',\n            placeHolder:'Whole Number...'\n        },\n        \"ui-double-click\":{}\n    },\n    mappings: {\n        width:\"ui-text.width\",\n        height:\"ui-text.height\",\n        value:\"ui-text.value\",\n        \"place-holder\":\"ui-text.placeHolder\"\n    }\n}));","/* global AFRAME */\n/**\n *  Password Primitive for aframe-material-collection.\n * @namespace aframe-material-collection\n * @primitive a-ui-password-input\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerPrimitive('a-ui-password-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\n    defaultComponents: {\n        \"ui-text\":{\n            type:'password',\n            placeHolder:''\n        },\n        \"ui-double-click\":{}\n    },\n    mappings: {\n        width:\"ui-text.width\",\n        height:\"ui-text.height\",\n        value:\"ui-text.value\",\n        \"place-holder\":\"ui-text.placeHolder\"\n    }\n}));","/* global AFRAME,THREE */\n/**\n * Text input component Component for aframe-material-collection. Includes support for number/int only input.\n * @namespace aframe-material-collection\n * @component ui-text\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-text', {\n    schema: {\n        width:{type:'number',default:0.5},\n        height:{type:'number',default:0.1},\n        value: {default: ''},\n        type: {default: 'text'},\n        lineFocusColor: {default: '#009688'},\n        lineBlurColor: {default: '#cfcfcf'},\n        disabledColor: {default: '#afafaf'},\n        disabled: {type: 'boolean', default: false},\n        fontFamily: {default: 'Roboto'},\n        fontColor: {default: '#4f4f4f'},\n        placeHolder: {default: 'Text...'},\n        intersectableClass: {default: 'intersectable'},\n    },\n    init(){\n\n        // if (typeof CanvasInput === 'undefined') {\n        //     throw 'aframe-material-collection requires CanvasInput to be loaded first - <script src=\"https://cdn.rawgit.com/shaneharris/CanvasInput/master/CanvasInput.js\"></script>';\n        // }\n        console.warn('ui-text is deprecated. please use ui-input-text instead. Thanks!');\n    }\n});","/* global AFRAME,THREE */\n/**\n * A component to load an icon and set some defaults for positioning and transparency.\n * @namespace aframe-material-collection\n * @component ui-icon\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-icon', {\n    schema: {\n        src: {default: 'icons/send_white_64dp.png'},\n        size:{type:'vec2',default:{x:0.1,y:0.1}},\n        zIndex:{type:'number',default:0.003},\n        color:{default:'#fff'}\n    },\n    init() {\n        this.icon = new THREE.Mesh(new THREE.PlaneGeometry(this.data.size.x,this.data.size.y),new THREE.MeshBasicMaterial({color:this.data.color,alphaTest:0.4,transparent:true,map:new THREE.TextureLoader().load(this.data.src)}));\n        this.icon.position.set(0,0,this.data.zIndex);\n        this.el.object3D.add(this.icon);\n    }\n});","/* global AFRAME,THREE */\n/**\n * Rounded corners Component for aframe-material-collection. Expects an a-plane entity.\n * @namespace aframe-material-collection\n * @component ui-rounded\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-rounded', {\n    schema: {\n        borderRadius: {type: 'number', default: 0.01},\n        curveSegments:{type: 'int', default: 1},\n    },\n    init() {\n        let mesh = this.el.getObject3D('mesh');\n        let roundedRectShape = new THREE.Shape();\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\n        ( function roundedRect( ctx, x, y, width, height, radius ) {\n            ctx.moveTo( x, y + radius );\n            ctx.lineTo( x, y + height - radius );\n            ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\n            ctx.lineTo( x + width - radius, y + height );\n            ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\n            ctx.lineTo( x + width, y + radius );\n            ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\n            ctx.lineTo( x + radius, y );\n            ctx.quadraticCurveTo( x, y, x, y + radius );\n        } )( roundedRectShape, -mesh.geometry.metadata.parameters.width/2, -mesh.geometry.metadata.parameters.height/2, mesh.geometry.metadata.parameters.width, mesh.geometry.metadata.parameters.height, this.data.borderRadius );\n        // Update the geometry.\n        mesh.geometry = new THREE.ShapeBufferGeometry(roundedRectShape,this.data.curveSegments);\n        // Emit rounded-loaded event once the geometry has been updated.\n        this.el.emit('rounded-loaded', null, false);\n    }\n});","/* global AFRAME,TWEEN,THREE */\n/**\n * Ripple Component for aframe-material-collection. Add a ripple to an entity with options for controlling\n * clamping the animation and offsetting the ripple z position to place on top or bottom\n * @namespace aframe-material-collection\n * @component ui-ripple\n * @author Shane Harris\n */\n\nmodule.exports = AFRAME.registerComponent('ui-ripple',{\n    schema:{\n        color: {default: '#fff'},\n        duration:{type:'int',default:1000},\n        fadeDuration:{type:'int',default:750},\n        fadeDelay:{type:'int',default:250},\n        clampToSquare:{type:'boolean',default:false},\n        size:{type:'vec2',default:{x:1,y:1}},\n        zIndex:{type:'number',default:-0.001},\n        segments:{type:'int',default:6}\n    },\n    init(){\n        // Setup circle geometry for ripple effect\n        this.rippleGeometry = new THREE.CircleGeometry(Math.max(this.data.size.x,this.data.size.y),this.data.segments);\n        this.ripple = new THREE.Mesh(this.rippleGeometry.clone(),new THREE.MeshBasicMaterial({color:this.data.color,transparent:true, opacity:0.4,alphaTest:0.1}));\n        this.ripple.scale.set(0.00001,0.00001,0.00001);\n        this.el.object3D.add(this.ripple);\n        this.el.addEventListener('mousedown',this.click.bind(this));\n        this.ripple.position.set(0,0,this.data.zIndex);\n        // Set clipping planes if clamping to square\n        if(this.data.clampToSquare){\n\n            this.content_clips = [\n                new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2) ),\n                new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2) ),\n                new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2) ),\n                new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2) )\n            ];\n        }\n    },\n    click(e){\n        if(this.isRippling){\n            // Throttle clicks.\n            return e.preventDefault();\n        }\n        this.isRippling = true;\n        // Set clipping planes if clamping to square\n        if(this.data.clampToSquare){\n            this.setRippleClips(this.ripple.material);\n        }\n        // Animate the size of the circle ripple from the center of the entity.\n        this.tweenSize(this.ripple.geometry);\n        // Fade the circle out as it ripples.\n        this.tweenOpacity(this.ripple.material);\n    },\n    setRippleClips(){\n        // update content clips world positions from this current element.\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2));\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2));\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2));\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2));\n        //this.el.sceneEl.object3D.updateMatrixWorld();\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\n        this.ripple.material.clippingPlanes = this.el._content_clips?this.el._content_clips.concat(this.content_clips):this.content_clips;\n        this.ripple.material.clipShadows = true;\n        this.ripple.material.needsUpdate = true;\n    },\n    tweenSize(geometry){\n        let _this = this;\n        // Start changes\n        UI.utils.isChanging(this.el.sceneEl,_this.ripple.uuid);\n        new TWEEN.Tween({x:0.00001})\n            .to({ x: 1}, this.data.duration)\n            .onUpdate(function(){\n                _this.ripple.scale.set(this.x,this.x,this.x);\n            })\n            .onComplete(()=>{\n                _this.ripple.scale.set(0.00001,0.00001,0.00001);\n                // Reset throttle flag.\n                this.isRippling = false;\n                // Stop changes\n                UI.utils.stoppedChanging(_this.ripple.uuid);\n            })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    },\n    tweenOpacity(material){\n        new TWEEN.Tween({x:0.4})\n            .to({ x: 0}, this.data.fadeDuration)\n            .delay(this.data.fadeDelay)\n            .onUpdate(function(){\n                material.opacity = this.x;\n            })\n            .onComplete(()=>{\n                material.opacity = 0.4;\n            })\n            .easing(TWEEN.Easing.Exponential.Out).start();\n    }\n});","/* global AFRAME */\n/**\n * A component shim the mouse move event for the AFRAME cursor raycaster.\n * @namespace aframe-material-collection\n * @component ui-mouse-shim\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-mouse-shim', {\n    schema:{\n        fps:{type:'number',default:45}\n    },\n    init(){\n        if (!this.el.components.raycaster) {\n            throw 'ui-mouse-move component needs the raycaster component to be added.'\n        }\n        // Add support for mouse wheel\n        this.el.sceneEl.renderer.domElement.addEventListener( 'wheel', this.onMouseWheel.bind(this), false);\n    },\n    onMouseWheel(e){\n        this.emitMouseEvent('ui-mousewheel',e);\n    },\n    tick() {\n        if(new Date().getTime()-this.lastMouseMoveTime<(1000/this.data.fps))return;\n        this.emitMouseEvent('ui-mousemove');\n        this.lastMouseMoveTime = new Date().getTime();\n    },\n    emitMouseEvent(eventType,event){\n        // Get current intersections from raycaster component.\n        this.el.components.raycaster.intersections.forEach(intersection=>{\n            if(intersection.object.el){\n                // Emit custom mouse move event ont he intersected element.\n                intersection.object.el.emit(eventType,{cursorEl:this.el,intersection:intersection,evt:event})\n            }\n        });\n    }\n});","/* global AFRAME */\n/**\n * Checkbox A simple component to listen for two click events in quick succession.\n * @namespace aframe-material-collection\n * @component ui-double-click\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-double-click', {\n    schema:{\n        timeout:{type:'int',default:200}\n    },\n    init() {\n        let last_click = 0;\n        // Add click event for listening for two clicks within the specified timespan.\n        this.el.addEventListener('mousedown',e=>{\n            let now = new Date().getTime();\n            if(now-last_click<this.data.timeout){\n                this.el.emit('dblclick',e);\n                // Reset last click\n                last_click = 0;\n                e.preventDefault();\n            }\n            last_click = now;\n        });\n    }\n});","/* global AFRAME,THREE */\n/**\n * Rounded borders Component for aframe-material-collection. Expects an a-plane entity.\n * @namespace aframe-material-collection\n * @component ui-border\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-border', {\n    schema: {\n        borderRadius: {type: 'number', default: 0.01},\n        curveSegments:{type: 'int', default: 5},\n        borderWidth:{type: 'number', default: 0.008},\n        color:{default:\"#5f5f5f\"},\n        numberOfPoints:{type:'int',default:180}\n    },\n    init() {\n        let mesh = this.el.getObject3D('mesh');\n        let roundedRectShape = new THREE.Shape();\n        this.roundedRect(roundedRectShape,\n            mesh.geometry.metadata.parameters.width,\n            mesh.geometry.metadata.parameters.height,\n            this.data.borderRadius);\n        this.roundedRect(roundedRectShape,\n            mesh.geometry.metadata.parameters.width-this.data.borderWidth*2,\n            mesh.geometry.metadata.parameters.height-this.data.borderWidth*2,\n            this.data.borderRadius,true);\n\n        this.el.setObject3D('mesh',new THREE.Mesh( new THREE.ShapeGeometry(roundedRectShape,this.data.curveSegments), new THREE.MeshBasicMaterial( { color: this.data.color } ) ));\n    \n    },\n    roundedRect( ctx, width, height, radius, isHole) {\n        let x = -width/2, y = -height/2;\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\n        let shapeCtx;\n        if(isHole){\n            shapeCtx = ctx;\n            ctx = new THREE.Path()\n        }\n        ctx.moveTo( x, y + radius );\n        ctx.lineTo( x, y + height - radius );\n        ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\n        ctx.lineTo( x + width - radius, y + height );\n        ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\n        ctx.lineTo( x + width, y + radius );\n        ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\n        ctx.lineTo( x + radius, y );\n        ctx.quadraticCurveTo( x, y, x, y + radius );\n        if(isHole){\n            shapeCtx.holes.push(ctx);\n        }\n    }\n});","/* global AFRAME */\n/**\n * A component to pick a color - based on https://github.com/mokargas/aframe-colorwheel-component\n * @namespace aframe-material-collection\n * @component ui-renderer\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-color-picker', {\n    schema: {\n        backingColor:{default:\"#dfdfdf\"},\n        backingColorBottom:{default:\"#4db6ac\"},\n        targetEl:{type:'selector'}\n    },\n    init() {\n        this.setupColorWheel();\n        this.setupBrightnessSlider();\n        this.setupColorPreview();\n        this.setupBacking();\n        this.setupEvents();\n        this.el.setAttribute('visible',false);\n        this.el.setAttribute('scale','0.00001 0.00001 0.00001');\n        // Expose methods to open/close the color picker.\n        this.el.open = this.open.bind(this);\n        this.el.close = this.close.bind(this);\n    },\n    open(){\n        return new Promise(resolve=>{\n            this.selectCallback = resolve;\n            this.el.setAttribute('visible',true);\n            this.tweenPickerScale(0.00001,0.5);\n        });\n    },\n    close(){\n        this.tweenPickerScale(0.5,0.00001)\n            .then(()=>this.el.setAttribute('visible',false));\n    },\n    tweenPickerScale(from,to){\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n        return new Promise(r=>{\n            let _this = this;\n            new TWEEN.Tween({x:from})\n                .to({x:to}, 250)\n                .onUpdate(function(){\n                    _this.el.setAttribute('scale',this.x+' '+this.x+' '+this.x);\n                })\n                .onComplete(()=>{\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\n                    r();\n                })\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    },\n    setupBacking(){\n        let circleBacking = document.createElement('a-circle');\n        circleBacking.className = 'no-yoga-layout';\n        circleBacking.setAttribute('position','0 0 -0.001');\n        circleBacking.setAttribute('material',{\n            color: this.data.backingColor,\n            flatShading: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        circleBacking.setAttribute('radius',0.65);\n        circleBacking.setAttribute('theta-length',180);\n\n        this.el.appendChild(circleBacking);\n\n        let planeBacking = document.createElement('a-plane');\n        planeBacking.setAttribute('position','0 -0.375 -0.001');\n        planeBacking.className = 'no-yoga-layout';\n        planeBacking.setAttribute('material',{\n            color: this.data.backingColor,\n            flatShading: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        planeBacking.setAttribute('width',1.3);\n        planeBacking.setAttribute('height',0.75);\n\n        this.el.appendChild(planeBacking);\n\n\n        let planeBackingBottom = document.createElement('a-plane');\n        planeBackingBottom.setAttribute('position','0 -1.05 -0.001');\n        planeBackingBottom.className = 'no-yoga-layout';\n        planeBackingBottom.setAttribute('material',{\n            color: this.data.backingColorBottom,\n            flatShading: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        planeBackingBottom.setAttribute('width',1.3);\n        planeBackingBottom.setAttribute('height',0.6);\n        this.el.appendChild(planeBackingBottom);\n\n        let buttonConfirm = document.createElement('a-ui-button');\n        buttonConfirm.setAttribute('position','0.315 -1.17 0.001');\n        buttonConfirm.className = 'intersectable no-yoga-layout';\n        buttonConfirm.setAttribute('text-value','SAVE');\n        buttonConfirm.setAttribute('color','#ffffff');\n        buttonConfirm.setAttribute('wrap-count','9');\n        buttonConfirm.setAttribute('ripple-color','#009688');\n        buttonConfirm.setAttribute('font-color','#009688');\n        buttonConfirm.setAttribute('ripple-size','0.5 0.18');\n        buttonConfirm.setAttribute('width',0.5);\n        buttonConfirm.setAttribute('height',0.18);\n        if(this.data.targetEl)\n            this.data.targetEl.addEventListener('mousedown',()=> {\n                this.el.open();\n            });\n        this.el.appendChild(buttonConfirm);\n        buttonConfirm.addEventListener('mousedown',e=> {\n            let hex = this.getHex();\n            this.el.emit('color-selected',hex);\n            this.el.close();\n            UI.utils.preventDefault(e);\n            if(this.data.targetEl){\n                this.data.targetEl.setAttribute('color',hex);\n            }\n            if(this.selectCallback&& typeof this.selectCallback === \"function\"){\n                this.selectCallback(hex);\n            }\n        });\n\n        let buttonCancel = document.createElement('a-ui-button');\n        buttonCancel.setAttribute('position','-0.315 -1.17 0.001');\n        buttonCancel.className = 'intersectable no-yoga-layout';\n        buttonCancel.setAttribute('text-value','CANCEL');\n        buttonCancel.setAttribute('color','#ffffff');\n        buttonCancel.setAttribute('wrap-count','9');\n        buttonCancel.setAttribute('ripple-color','#ff9800');\n        buttonCancel.setAttribute('font-color','#ff9800');\n        buttonCancel.setAttribute('ripple-size','0.5 0.18');\n        buttonCancel.setAttribute('width',0.5);\n        buttonCancel.setAttribute('height',0.18);\n\n        this.el.appendChild(buttonCancel);\n        buttonCancel.addEventListener('mousedown',e=> {\n            this.el.emit('color-cancelled');\n            this.el.close();\n            UI.utils.preventDefault(e);\n        });\n        this.hexValue = document.createElement('a-text');\n        this.hexValue.setAttribute('value','#ffffff');\n        this.hexValue.setAttribute('align','center');\n        this.hexValue.setAttribute('position','0 -0.9 0.001');\n        this.hexValue.setAttribute('wrap-count',15);\n        this.hexValue.setAttribute('width',1.3);\n\n        this.el.appendChild(this.hexValue);\n    },\n    setupColorPreview(){\n        this.colorPreview = document.createElement('a-circle');\n        this.colorPreview.setAttribute('position','-0.45 -0.9 0');\n        this.colorPreview.setAttribute('material',{\n            color: '#ffffff',\n            flatShading: true,\n            transparent: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        this.colorPreview.setAttribute('radius',0.05);\n        this.el.appendChild(this.colorPreview);\n    },\n    setupColorWheel(){\n        this.hsv = {\n            h: 0.0,\n            s: 0.0,\n            v: 1.0\n        };\n        this.colorWheel = document.createElement('a-circle');\n        this.colorWheel.setAttribute('material',{\n            color: '#ffffff',\n            flatShading: true,\n            transparent: true,\n            shader: 'flat',\n            fog: false,\n            side: 'double'\n        });\n        this.colorWheel.setAttribute('radius',0.5);\n        this.el.appendChild(this.colorWheel);\n        this.colorWheel.className = 'intersectable no-yoga-layout';\n        this.colorWheel.addEventListener('loaded',()=>{\n            let colorWheel = this.colorWheel.getObject3D('mesh');\n            let vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\n\n            let fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\n\n            colorWheel.material = new THREE.ShaderMaterial({\n                uniforms: {\n                    brightness: {\n                        type: 'f',\n                        value: this.hsv.v\n                    }\n                },\n                vertexShader: vertexShader,\n                fragmentShader: fragmentShader\n            });\n            colorWheel.material.needsUpdate = true;\n        })\n    },\n    setupBrightnessSlider(){\n        this.brightnessSlider = document.createElement('a-plane');\n        this.brightnessSlider.setAttribute('height',0.1);\n        this.brightnessSlider.setAttribute('width',0.8);\n        this.brightnessSlider.setAttribute('position','0 -0.6 0');\n        this.brightnessSlider.className = 'intersectable no-yoga-layout';\n        this.el.appendChild(this.brightnessSlider);\n        this.brightnessSlider.addEventListener('loaded',()=>{\n\n            let vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\n\n            let fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.x));\\n        gl_FragColor = color;\\n      }\\n    ';\n\n\n            this.brightnessSlider.getObject3D('mesh').material = new THREE.ShaderMaterial({\n                uniforms: {\n                    color1: {\n                        type: 'c',\n                        value: new THREE.Color(0xFFFFFF)\n                    },\n                    color2: {\n                        type: 'c',\n                        value: new THREE.Color(0x000000)\n                    }\n                },\n                vertexShader: vertexShader,\n                fragmentShader: fragmentShader\n            });\n            this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\n        });\n        let brightnessResetLeft = document.createElement('a-triangle');\n        brightnessResetLeft.setAttribute('vertex-a','0 0.05 0');\n        brightnessResetLeft.setAttribute('vertex-b','-0.05 -0.05 0');\n        brightnessResetLeft.setAttribute('vertex-c','0.05 -0.05 0');\n        brightnessResetLeft.setAttribute('position','-0.475 -0.6 0');\n        brightnessResetLeft.setAttribute('rotation','0 0 90');\n        brightnessResetLeft.setAttribute('shader','flat');\n        brightnessResetLeft.setAttribute('color','#009688');\n        brightnessResetLeft.setAttribute('ui-btn','');\n        brightnessResetLeft.className = 'intersectable';\n        this.el.appendChild(brightnessResetLeft);\n\n\n        let brightnessResetRight = document.createElement('a-triangle');\n        brightnessResetRight.setAttribute('vertex-a','0 0.05 0');\n        brightnessResetRight.setAttribute('vertex-b','-0.05 -0.05 0');\n        brightnessResetRight.setAttribute('vertex-c','0.05 -0.05 0');\n        brightnessResetRight.setAttribute('position','0.475 -0.6 0');\n        brightnessResetRight.setAttribute('rotation','0 0 -90');\n        brightnessResetRight.setAttribute('color','#009688');\n        brightnessResetRight.setAttribute('shader','flat');\n        brightnessResetRight.setAttribute('ui-btn','');\n        brightnessResetRight.className = 'intersectable';\n        this.el.appendChild(brightnessResetRight);\n\n        brightnessResetLeft.addEventListener('mousedown',()=>{\n\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 0;\n            this.hsv.v = 0;\n            this.hsv.h = 0;\n            this.hsv.s = 0;\n            this.updateColor();\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\n        });\n        brightnessResetRight.addEventListener('mousedown',()=>{\n\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 1;\n            this.hsv.v = 1;\n            this.hsv.h = 0;\n            this.hsv.s = 0;\n            this.updateColor();\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\n        });\n    },\n    getHex(){\n        let rgb = this.hsvToRgb(this.hsv),\n            color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\n        return '#' + new THREE.Color(color).getHexString()\n    },\n    updateColor(){\n        let hex = this.getHex();\n        this.colorPreview.setAttribute('color',hex);\n        this.hexValue.setAttribute('value',hex);\n    },\n    setupEvents(){\n        this.colorWheel.addEventListener('mousedown',e=>{\n            this.isMouseDown = true;\n            UI.utils.preventDefault(e);\n        });\n        this.colorWheel.addEventListener('mouseup',e=>{\n            this.isMouseDown = false;\n            UI.utils.preventDefault(e);\n        });\n        this.colorWheel.addEventListener('ui-mousemove',e=>{\n            if(!this.isMouseDown)return;\n            UI.utils.preventDefault(e);\n\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n            let colorWheel = this.colorWheel.getObject3D('mesh'),\n                radius = 0.5,\n                position = e.detail.intersection.point;\n\n            colorWheel.updateMatrixWorld();\n            colorWheel.worldToLocal(position);\n\n            //Determine Hue and Saturation value from polar co-ordinates\n            let polarPosition = {\n                r: Math.sqrt(position.x * position.x + position.y * position.y),\n                theta: Math.PI + Math.atan2(position.y, position.x)\n            };\n\n            let angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\n            this.hsv.h = angle / 360;\n            this.hsv.s = polarPosition.r / radius;\n            this.updateColor();\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\n        });\n        this.brightnessSlider.addEventListener('mousedown',e=>{\n            this.isMouseDown = true;\n            UI.utils.preventDefault(e);\n        });\n        this.brightnessSlider.addEventListener('mouseup',e=>{\n            this.isMouseDown = false;\n            UI.utils.preventDefault(e);\n        });\n        this.brightnessSlider.addEventListener('ui-mousemove',e=>{\n\n            UI.utils.preventDefault(e);\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\n            if(!this.isMouseDown)return;\n            let brightnessSlider = this.brightnessSlider.getObject3D('mesh'),\n                colorWheel = this.colorWheel.getObject3D('mesh'),\n                position = e.detail.intersection.point;\n\n            brightnessSlider.updateMatrixWorld();\n            brightnessSlider.worldToLocal(position);\n\n            //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\n            let cursorOffset = position.x + 0.4;//this.brightnessSliderHeight / 2;\n            let brightness = cursorOffset / 0.8;//this.brightnessSliderHeight;\n\n            //Update material brightness\n            colorWheel.material.uniforms['brightness'].value = brightness;\n            this.hsv.v = brightness;\n            this.updateColor();\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\n        });\n    },\n    hsvToRgb(hsv) {\n        let r, g, b, i, f, p, q, t;\n        let h = THREE.Math.clamp(hsv.h, 0, 1);\n        let s = THREE.Math.clamp(hsv.s, 0, 1);\n        let v = hsv.v;\n\n        i = Math.floor(h * 6);\n        f = h * 6 - i;\n        p = v * (1 - s);\n        q = v * (1 - f * s);\n        t = v * (1 - (1 - f) * s);\n        switch (i % 6) {\n            case 0:\n                r = v;\n                g = t;\n                b = p;\n                break;\n            case 1:\n                r = q;\n                g = v;\n                b = p;\n                break;\n            case 2:\n                r = p;\n                g = v;\n                b = t;\n                break;\n            case 3:\n                r = p;\n                g = q;\n                b = v;\n                break;\n            case 4:\n                r = t;\n                g = p;\n                b = v;\n                break;\n            case 5:\n                r = v;\n                g = p;\n                b = q;\n                break;\n        }\n        return {\n            r: Math.round(r * 255),\n            g: Math.round(g * 255),\n            b: Math.round(b * 255)\n        };\n    }\n});\n\n","/* global AFRAME,THREE */\n/**\n * Modal Component for aframe-material-collection.\n * @namespace aframe-material-collection\n * @component ui-modal\n * @author Shane Harris\n */\nmodule.exports = AFRAME.registerComponent('ui-modal', {\n    schema: {\n        modal:{type:'selector'},\n        main:{type:'selector'}\n    },\n    init(){\n        if(this.data.modal&&this.data.main){\n            // Get the modal panel to be able to animate its scale on open/close.\n            this.modalPanel = document.querySelector(this.data.modal.getAttribute('ui-panel'));\n\n            this.mainComponents = this.data.main.components;\n            this.modalComponents = this.data.modal.components;\n            // Pause rendering of modal until opened.\n            if(this.modalComponents&&this.modalComponents['ui-renderer']){\n                this.modalComponents['ui-renderer'].pause();\n            }\n            // Setup close listeners for anything with the class close-modal.\n            let close_buttons = this.data.modal.querySelectorAll('.close-modal');\n            for(let i = 0; i < close_buttons.length; i++ ){\n                let close_button = close_buttons[i];\n                close_button.addEventListener('mousedown',()=>{\n                    this.close();\n                });\n            }\n            // Add click handler for opening the modal, pause the main render screen and play the modal renderer\n            this.openModal = this.open.bind(this);\n            this.el.addEventListener('mousedown',this.openModal);\n            this.data.main.modal = this;\n\n            // Expose methods to open/close the modal.\n            this.el.open = this.open.bind(this);\n            this.el.close = this.close.bind(this);\n        }\n    },\n    remove(){\n        this.el.removeEventListener('mousedown',this.openModal);\n    },\n    open(){\n        if(this.mainComponents&&this.mainComponents['ui-renderer']){\n            this.mainComponents['ui-renderer'].pauseRender();\n            this.tweenModalScale(0.0000001,1);\n            this.modalComponents['ui-renderer'].play();\n        }\n    },\n    close(){\n        // Pause the modal rendering and play the main rendering again.\n        this.modalComponents['ui-renderer'].pause();\n        this.mainComponents['ui-renderer'].play();\n        this.mainComponents['ui-renderer'].playRender();\n        this.tweenModalScale(1,0.0000001)\n            .then(()=>{\n                this.el.sceneEl.emit('modal-closed');\n            });\n    },\n    tweenModalScale(from,to){\n        return new Promise(r=>{\n            let _this = this;\n            new TWEEN.Tween({x:from})\n                .to({x:to}, 250)\n                .onUpdate(function(){\n                    if(_this.modalPanel)\n                        _this.modalPanel.setAttribute('scale',this.x+' '+this.x+' '+this.x);\n                })\n                .onComplete(r)\n                .easing(TWEEN.Easing.Exponential.Out).start();\n        });\n    }\n});","export class Utils{\n    constructor(){\n        this.changesDetected = {};\n        this.is_changeing = false;\n        // setInterval(()=>{\n        //     let now = new Date().getTime();\n        //     for(let key in this.changesDetected){\n        //         let change = this.changesDetected[key];\n        //         if(change.t&&now-change.t>2000){\n        //             this.stoppedChanging(key);\n        //         }\n        //     }\n        // },2000);\n    }\n    isFirstOrLastChange(){\n        let empty = true;\n\n        for(let key in this.changesDetected) {\n            empty = false;\n            break;\n        }\n\n        if(!this.is_changeing&&!empty){\n            this.scene.emit('ui-changing');\n            this.is_changeing = true;\n        }else if(this.is_changeing&&empty){\n            if(this.is_changeing){\n                this.scene.emit('ui-changing-stopped');\n                this.is_changeing = false;\n            }\n        }\n    }\n    preventDefault(e){\n        if(e.detail && e.detail.preventDefault && typeof e.detail.preventDefault === \"function\"){\n            e.detail.preventDefault();\n        }\n    }\n    shorten(string,length){\n        return string.length>length?string.substr(0,length)+\"...\":string;\n    }\n    ucFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    isChanging(scene,ref){\n        let index = this.changesDetected[ref];\n        if(!index){\n            this.scene = this.scene||scene;\n            let now = new Date().getTime();\n            this.changesDetected[ref] = {t:now};\n            this.isFirstOrLastChange();\n        }else{\n            this.changesDetected[ref].t = new Date().getTime();\n        }\n    }\n    stoppedChanging(ref){\n        delete this.changesDetected[ref];\n        this.isFirstOrLastChange();\n    }\n    copyToClipboard(text){\n        navigator.clipboard.writeText(text).then(()=>{\n        },(err)=> {\n            console.error('copy to clipboard failed:', err);\n        });\n    }\n    clearObject(object){\n        object.traverse(child=>{\n            if(child.material) {\n                if(child.material.length){\n                    for(let i =0; i < child.material.length; i++){\n                        if(child.material[i].map){\n                            child.material[i].map.dispose();\n                        }\n                        child.material[i].dispose();\n                    }\n                }else{\n                    if(child.material.map){\n                        child.material.map.dispose();\n                    }\n                    child.material.dispose();\n                }\n            }\n            if(child.geometry){\n                child.geometry.dispose();\n            }\n        });\n    }\n}","/* global AFRAME */\n/**\n * Application entry point\n * @author Shane Harris\n */\nimport {Utils} from \"./utils\";\n\nlet version = require('./../package.json').version;\nconsole.log('aframe-material-collection version '+version);\n\nif (typeof AFRAME === 'undefined') {\n    throw 'aframe-material-collection requires AFRAME to be loaded first. - <script src=\"https://aframe.io/releases/0.8.2/aframe.min.js\"></script>';\n}\nlet utils = new Utils();\n\nwindow.UI = {\n    // Utils\n    utils:utils,\n    // Primitives\n    a_ui_button: require('./primitives/button'),\n    a_ui_fab_button: require('./primitives/fab_button'),\n    a_ui_fab_button_small: require('./primitives/fab_button_small'),\n    a_ui_switch: require('./primitives/switch'),\n    a_ui_slider: require('./primitives/slider'),\n    a_ui_number: require('./primitives/number'),\n    a_ui_toast: require('./primitives/toast'),\n    a_ui_checkbox: require('./primitives/checkbox'),\n    a_ui_radio: require('./primitives/radio'),\n    a_ui_input_text: require('./primitives/input-text'),\n    a_ui_text_input: require('./primitives/text-input'),\n    a_ui_number_input: require('./primitives/number-input'),\n    a_ui_int_input: require('./primitives/int-input'),\n    a_ui_password_input: require('./primitives/password-input'),\n    a_ui_scroll_pane: require('./primitives/scroll-pane'),\n    a_ui_renderer: require('./primitives/renderer'),\n\n    // Components\n    text: require('./components/text'),\n    input_text: require('./components/input-text'),\n    btn: require('./components/btn'),\n    icon: require('./components/icon'),\n    rounded: require('./components/rounded'),\n    ripple: require('./components/ripple'),\n    slider: require('./components/slider'),\n    number: require('./components/number'),\n    switch: require('./components/switch'),\n    toast: require('./components/toast'),\n    scroll_pane: require('./components/scroll-pane'),\n    mouse_shim: require('./components/mouse-shim'),\n    double_click: require('./components/double-click'),\n    checkbox: require('./components/checkbox'),\n    radio: require('./components/radio'),\n    border: require('./components/border'),\n    curvedPlane: require('./components/curved-plane'),\n    colorPicker: require('./components/color-picker'),\n    modal: require('./components/modal'),\n    renderer: require('./components/renderer')\n};\n//module.exports = UI;\n\n"],"sourceRoot":""}